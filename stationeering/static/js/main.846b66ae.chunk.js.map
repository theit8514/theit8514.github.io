{"version":3,"sources":["guide/Context.js","guide/scenarios/Scenarios.js","guide/Guide.js","tools/ic/ICPermalinkGenerator.js","tools/ic/ICInternalRegisters.js","tools/ic/ICIODevices.js","tools/ic/ICStack.js","tools/ic/ICProgramErrors.js","tools/ic/SISAssembler.js","tools/ic/ICSocket.js","tools/ic/ICInstructions.js","tools/ic/ICInstructionSet.js","tools/ic/ICSimulator.js","tools/ic/ICPermalink.js","UpdateManager.js","tools/data/Data.js","tools/discord/Discord.js","versions/VersionList.js","home/News.js","home/Home.js","App.js","UpdateProxy.js","serviceWorker.js","index.js"],"names":["GuideContext","React","createContext","Scenarios","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","createElement","Row","this","renderScenarios","context","scenarios","map","scenario","i","Scenario","Component","contextType","_Component2","_super2","Col","md","Panel","bsStyle","Heading","Title","componentClass","props","name","Badge","className","game_mode","Body","description","PlanetProperties","Atmosphere","_Component3","_super3","ListGroup","ListGroupItem","formatGravity","planet","gravity","formatDayLength","day_length","acceleration","Math","abs","toFixed","_Component4","_super4","atmosphere","composition","length","AtmosphereProperties","AtmosphereContents","_Component5","_super5","totalMoles","reduce","acc","cur","quantity","averageTemp","temperature","avg","pressure","renderTemperature","min","max","temp","_Component6","_super6","renderContents","_this","gas","percent","language","Gases","type","library","add","faSpinner","faTimesCircle","faHandHolding","faWrench","faMicrochip","faLeaf","faSprayCan","faUtensils","faUserAstronaut","faBug","faIndustry","faChessBoard","faBoxOpen","faLongArrowAltLeft","faHashtag","faSearch","faWind","faTerminal","faEye","faEyeSlash","MANUFACTORY_TO_THING","Guide","call","state","desired","localStorage","getItem","mapping","undefined","data","things","recipies","loading","recipes","_this2","branch","loadData","concat","t","setState","_objectSpread","msg","message","transformedData","transformRecipeData","_step","transformed","_iterator","_createForOfIteratorHelper","s","n","done","recipe","manufactory","Object","keys","includes","item","remappedManufactory","ingredients","err","e","f","url","success","failure","axios","method","responseType","then","response","catch","error","allStates","_i","_Object$keys","push","isLoading","every","LoadingNotice","states","GuideContent","LoadState","title","icon","iconSpin","Label","FontAwesomeIcon","spin","currentKey","window","location","pathname","startsWith","Provider","sections","Nav","activeKey","NavItem","eventKey","NavLink","to","href","Route","path","render","Redirect","exact","component","ThingIndex","Thing","FLAGS","flag","_this3","changeSearchTerm","debounce","searchTerm","search","term","flags","_this4","FormGroup","controlId","ControlLabel","FormControl","placeholder","onChange","target","HelpBlock","SearchFlag","onClick","changeSearchFlag","bind","ThingList","filter","limit","result","hasFiltered","toLowerCase","Things","_step2","_iterator2","currentFlags","a","b","c","d","h","g","clearTimeout","setTimeout","size","toggle","newState","_Component7","_super7","_this5","thingKeys","limited","slice","Alert","Table","condensed","colSpan","ThingListItem","prefab","_Component8","_super8","thing","madeBy","sort","constructedBy","creationOptions","ThingLink","prefabHash","ThingFlag","accu","elem","_toConsumableArray","_Component9","_super9","destination","_Component10","_super10","_this6","match","params","makes","made","constructs","rkey","ThingProperties","ThingTemperatures","logicTypes","ThingLogicTypes","ThingMadeBy","ThingConstructedBy","ThingConstructs","ThingObjectHeirachy","objectHeirachy","ThingMakes","_Component11","_super11","temperatures","shatter","flashpoint","autoignition","_Component12","_super12","ThingPropertyFlag","_Component13","_super13","_Component14","_super14","_this7","_Component15","_super15","_Component16","_super16","_Component17","_super17","_this8","logicType","read","write","_Component18","_super18","_this9","ingredient","Reagents","unit","_Component19","_super19","_Component20","_super20","_this10","show","sessionStorage","reverse","el","indexOf","_this11","setItem","faCopy","faCog","ICPermalinkGenerator","lastGeneratedHash","lastGeneratedPermalink","requestState","beginGeneration","_assertThisInitialized","feedback","permalinkUpToDate","currentHash","generationInProgress","requestMessage","lastSuccess","lastRequest","class","InputGroup","readOnly","Button","disabled","CopyToClipboard","text","body","container","id","status","faTimes","faMemory","ICInternalRegisters","clearInternalRegisters","renderRegisters","registers","Register","index","label","labels","alias","aliases","setRegister","inputValue","onKeyPress","decimals","Number","join","roundTo","event","newVal","parseFloat","isNaN","faArrowsAltH","faTrashAlt","faPlus","faLink","faUnlink","ICIODevices","arr","len","chunks","register","ICIODevice","names","values","slots","reagents","connected","setIOSlot","setIOReagent","toggleLink","chunk","Clearfix","labelWithSeperator","ICIORegisters","ICIOSlots","ICIOReagents","renderFields","ICNewIORegister","registerIndex","fieldName","ICIORegister","field","ICNewIOSlot","slot","slotData","_i2","_Object$keys2","ICIOSlot","ICNewIOReagent","_i3","_Object$keys3","reagent","reagentData","_i4","_Object$keys4","reagentMode","ICIOReagent","onClickUpdate","onClickRemove","inputField","onChangeField","onChangeValue","inputSlot","inputLogicType","onChangeSlot","onChangeLogicType","parseInt","inputReagent","inputReagentMode","onChangeReagent","onChangeReagentMode","faBars","faArrowDown","faArrowUp","ICStack","truncated","toggleTruncated","renderStackValues","Footer","stack","maxValue","entries","ICStackEntry","current","ptr","ICProgramErrors","errors","style","errorType","errorTitle","renderErrors","ProgramError","line","isInteger","validTypes","errorDescription","lookUpError","resolveValidTypes","TYPES","r","j","ace","define","acequire","exports","module","oop","TextHighlightRules","ic","IC","SISAssemblerHighlightRules","instructions","getInstructions","instructionRegex","$rules","start","token","regex","next","defaultToken","normalizeRules","metaData","fileTypes","keyEquivalent","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","prototype","TextMode","Mode","HighlightRules","foldingRules","$id","faGamepad","faCogs","faLongArrowAltRight","faStepForward","faPlay","faRedo","faAngleDoubleRight","faBook","faLightbulb","faListUl","faPen","faReddit","faFile","ICSocket","programChange","step","runSingle","run","restart","toggleRunAfterRegisterChange","toggleRunWithErrors","hashChanged","defaultCode","program","internal","runAfterRegisterChange","runWithErrors","loadProgram","loadStateFromHash","transferICState","addEventListener","removeEventListener","saveStateToHash","hash","rawHash","substring","json","atob","JSON","parse","returnData","hasOwnProperty","setIgnoreErrors","forEach","_deviceFields","setIORegister","setInternalRegister","setIOConnected","_i5","mode","io","ioRegisters","ioConnected","internalRegisters","ioSlot","ioSlots","ioReagent","ioReagents","stringify","base64","btoa","ioNames","getIONames","ioLabels","getIOLabels","getIORegisters","getIOSlots","getIOReagents","getIOConnected","internalLabels","getInternalLabels","getInternalRegisters","programCounter","instructionCount","getInstructionCount","getStack","lastRunCount","lastStepState","lastExecuteTime","trim","split","inactive","canRun","markers","endCol","annotations","column","AceEditor","theme","setOptions","firstLineNumber","debounceChangePeriod","height","width","fontSize","ref","ButtonToolbar","ButtonGroup","formatCodeForDiscord","formatCodeForReddit","decodeStepState","_sleepPeriod","prevState","Date","toUTCString","total","lastResult","internalCount","filteredText","charCodeAt","load","parseLabels","getProgramErrors","lines","jumpLabel","lineParts","tokens","number","ICInstructions","ICInstructionSet","instructionKeys","instructionsByCategory","opcode","category","fields","extractedInstructions","instructionSet","categories","ICInstructionSetCategory","SECTIONS","instruction","example","ICInstruction","categoryName","splice","ICField","Fragment","sanitize","ICSimulator","MetaTags","content","ICPermalink","link","permalink","process","statusCode","output","Loading","FailedLoading","pulse","notFound","UpdateManager","notify","handleReload","handleDismiss","updateAvailable","updateProxy","subscribe","reload","faDatabase","faEnvelope","faFileExport","Data","faQuestionCircle","faExclamationTriangle","Discord","faCodeBranch","faFlask","faUsers","faRss","faFileCode","VersionList","section","VersionFilter","view","earliestDate","now","versions","nextFile","flattenedVersions","network","mounted","checkDataHasEnough","allBetaDates","version","beta_date","fetchNextPage","prevProps","recent","_ref","newData","justVersions","versionDataWithHeader","flatVersions","previous","messages","results","filterVersion","Version","alerts","public_date","branchBadge","builtDate","built_date","builtEpoch","Timestamp","time","renderItems","DateLabel","SteamLabel","build_id","server_beta_date","server_public_date","server_build_id","notes","note","format","twentyFourHour","faFileAlt","News","news","versionList","renderNews","count","NewsItem","image","has_image","src","date","author","contents","faNewspaper","faHandSpock","faSitemap","faGlobeAsia","faBookOpen","Home","faSteam","faTwitter","faGlobe","faDiscord","App","Navbar","Header","Navigation","Main","Brand","NavDropdown","MenuItem","pullRight","Text","Grid","Switch","UpdateProxy","_hasUpdate","_notifyFunctions","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","BrowserRouter","document","getElementById","URL","origin","fetch","contentType","headers","get","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.846b66ae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const GuideContext = React.createContext({});\r\n","import React, { Component } from 'react';\r\nimport { Panel, Row, Col, Badge, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport {GuideContext} from '../Context';\r\n\r\nclass Scenarios extends Component {\r\n  static contextType = GuideContext;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p />\r\n        <Row>\r\n          {this.renderScenarios()}\r\n        </Row>\r\n      </div>);\r\n  }\r\n\r\n  renderScenarios() {\r\n    return this.context.scenarios.map((scenario, i) => <Scenario key={i} scenario={scenario} />);\r\n  }\r\n}\r\n\r\nclass Scenario extends Component {\r\n  render() {\r\n    return (<Col md={6}>\r\n      <Panel bsStyle=\"primary\">\r\n        <Panel.Heading>\r\n          <Panel.Title componentClass=\"h3\">{this.props.scenario.name} <Badge className=\"pull-right\">{this.props.scenario.game_mode}</Badge></Panel.Title>\r\n        </Panel.Heading>\r\n        <Panel.Body>\r\n          <p>{this.props.scenario.description}</p>\r\n          <PlanetProperties scenario={this.props.scenario} />\r\n          <h5>Atmosphere</h5>\r\n          <Atmosphere scenario={this.props.scenario} />\r\n        </Panel.Body>\r\n      </Panel>\r\n    </Col>);\r\n  }\r\n}\r\n\r\nclass PlanetProperties extends Component {\r\n  render() {\r\n    return (<ListGroup>\r\n      <ListGroupItem><strong>Gravity:</strong> {this.formatGravity(this.props.scenario.planet.gravity)}</ListGroupItem>\r\n      <ListGroupItem><strong>Day Length:</strong> {this.formatDayLength(this.props.scenario.planet.day_length)}</ListGroupItem>\r\n    </ListGroup>);\r\n  }\r\n\r\n  formatGravity(value) {\r\n    var acceleration = Math.abs(value)\r\n    var g = (acceleration / 9.8).toFixed(2);\r\n\r\n    return acceleration + \" m/s² / \" + g + \"g\";\r\n  }\r\n\r\n  formatDayLength(value) {\r\n    var length = ((1 / value) * 20).toFixed(1);\r\n\r\n    return length + \" minutes\";\r\n  }\r\n}\r\n\r\nclass Atmosphere extends Component {\r\n  render() {\r\n    if (this.props.scenario.atmosphere.composition.length === 0) {\r\n      return (<ListGroup>\r\n        <ListGroupItem bsStyle=\"danger\">No Atmosphere</ListGroupItem>\r\n      </ListGroup>);\r\n    }\r\n\r\n    return (<div>\r\n      <AtmosphereProperties scenario={this.props.scenario} />\r\n      <h6>Contents</h6>\r\n      <AtmosphereContents scenario={this.props.scenario} />\r\n    </div>);\r\n  }\r\n}\r\n\r\nclass AtmosphereProperties extends Component {\r\n  render() {\r\n    var totalMoles = this.props.scenario.atmosphere.composition.reduce((acc, cur) => acc + cur.quantity, 0);\r\n    var averageTemp = this.props.scenario.atmosphere.temperature.avg;\r\n    var pressure = ((totalMoles * 8.3144 * averageTemp) / 8000);\r\n\r\n    return (<ListGroup>\r\n      <ListGroupItem><strong>Pressure:</strong> {pressure.toFixed(2)}kPa @ {this.renderTemperature(averageTemp)}</ListGroupItem>\r\n      <ListGroupItem><strong>Temperature Range:</strong> {this.renderTemperature(this.props.scenario.atmosphere.temperature.min)} to {this.renderTemperature(this.props.scenario.atmosphere.temperature.max)}</ListGroupItem>\r\n    </ListGroup>);\r\n  }\r\n\r\n  renderTemperature(temp) {\r\n    return (temp - 273.15).toFixed(1) + \"C (\" + temp.toFixed(1) + \"K)\";\r\n  }\r\n}\r\n\r\nclass AtmosphereContents extends Component {\r\n  static contextType = GuideContext;\r\n\r\n  render() {\r\n    return (<ListGroup>\r\n      {this.renderContents()}\r\n    </ListGroup>);\r\n  }\r\n\r\n  renderContents() {\r\n    var totalMoles = this.props.scenario.atmosphere.composition.reduce((acc, cur) => acc + cur.quantity, 0);\r\n\r\n    return this.props.scenario.atmosphere.composition.map((gas) => {\r\n      var percent = (gas.quantity / totalMoles) * 100;\r\n\r\n      return (<ListGroupItem><strong>{this.context.language.Gases[gas.type]}:</strong> {percent.toFixed(1)}% ({gas.quantity.toFixed(2)} moles)</ListGroupItem>);\r\n    })\r\n  }\r\n}\r\n\r\nexport default Scenarios;","import React, { Component } from 'react';\r\nimport { Route, NavLink, Redirect } from 'react-router-dom';\r\nimport { Row, Col, Label, Panel, Table, Alert, ListGroup, ListGroupItem, FormGroup, HelpBlock, FormControl, ControlLabel, Nav, NavItem } from 'react-bootstrap';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Scenarios from './scenarios/Scenarios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSpinner, faTimesCircle, faHandHolding, faWrench, faMicrochip, faSprayCan, faUtensils, faLeaf, faUserAstronaut, faBug, faIndustry, faChessBoard, faBoxOpen, faLongArrowAltLeft, faHashtag, faSearch, faWind, faTerminal, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { GuideContext } from './Context';\r\n\r\nimport './Guide.css';\r\n\r\nlibrary.add(faSpinner, faTimesCircle, faHandHolding, faWrench, faMicrochip, faLeaf, faSprayCan, faUtensils, faUserAstronaut, faBug, faIndustry, faChessBoard, faBoxOpen, faLongArrowAltLeft, faHashtag, faSearch, faWind, faTerminal, faEye, faEyeSlash);\r\n\r\nconst MANUFACTORY_TO_THING = {\r\n  \"FabricatorRecipes\": \"StructureFabricator\",\r\n  \"ElectronicsPrinterRecipes\": \"StructureElectronicsPrinter\",\r\n  \"OrganicsPrinterRecipes\": \"StructureOrganicsPrinter\",\r\n  \"ChemistryRecipes\": \"ApplianceChemistryStation\",\r\n  \"MicrowaveRecipes\": \"ApplianceMicrowave\",\r\n  \"ToolManufactoryRecipes\": \"StructureToolManufactory\",\r\n  \"HydraulicPipeBenderRecipes\": \"StructureHydraulicPipeBender\",\r\n  \"SecurityPrinterRecipes\": \"StructureSecurityPrinter\",\r\n  \"FurnaceRecipes\": \"StructureFurnace\",\r\n  \"ArcFurnaceRecipes\": \"StructureArcFurnace\",\r\n  \"AutolatheRecipes\": \"StructureAutolathe\",\r\n  \"CentrifugeRecipes\": \"StructureCentrifuge\",\r\n  \"PaintMixRecipes\": \"AppliancePaintMixer\"\r\n}\r\n\r\nclass Guide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      language: {\r\n        desired: localStorage.getItem('guideLanguage') || \"en\",\r\n\r\n        mapping: undefined\r\n      },\r\n      data: {\r\n        desired: localStorage.getItem('guideBranch') || \"public\",\r\n\r\n        things: undefined,\r\n        recipies: undefined,\r\n        scenarios: undefined\r\n      },\r\n      loading: {\r\n        language: { state: \"unloaded\" },\r\n        things: { state: \"unloaded\" },\r\n        recipes: { state: \"unloaded\" },\r\n        scenarios: { state: \"unloaded\" }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let language = this.state.language.desired;\r\n    let branch = this.state.data.desired;\r\n\r\n    this.loadData(`https://data.stationeering.com/languages/${language}/${branch}.json`,\r\n    (t, data) => {\r\n      t.setState({ language: { ...this.state.language, mapping: data }, loading: { ...this.state.loading, language: { state: \"success\" } }});\r\n    },\r\n    (t, msg) => {\r\n      t.setState({ loading: { ...this.state.loading, language: { state: \"failed\", message: msg } }});\r\n    },\r\n    this);\r\n\r\n    this.loadData(`https://data.stationeering.com/things/${branch}/things.json`,\r\n    (t, data) => {\r\n      t.setState({ data: { ...this.state.data, things: data }, loading: { ...this.state.loading, things: { state: \"success\" } }});\r\n    },\r\n    (t, msg) => {\r\n      t.setState({ loading: { ...this.state.loading, things: { state: \"failed\", message: msg } }});\r\n    },\r\n    this);\r\n\r\n    this.loadData(`https://data.stationeering.com/recipes/${branch}.json`,\r\n    (t, data) => {\r\n      var transformedData = t.transformRecipeData(data.recipes);\r\n      t.setState({ data: { ...this.state.data, recipes: transformedData }, loading: { ...this.state.loading, recipes: { state: \"success\" } }});\r\n    },\r\n    (t, msg) => {\r\n      t.setState({ loading: { ...this.state.loading, recipes: { state: \"failed\", message: msg } }});\r\n    },\r\n    this);\r\n\r\n    this.loadData(`https://data.stationeering.com/scenarios/${branch}.json`,\r\n    (t, data) => {\r\n      t.setState({ data: { ...this.state.data, scenarios: data }, loading: { ...this.state.loading, scenarios: { state: \"success\" } }});\r\n    },\r\n    (t, msg) => {\r\n      t.setState({ loading: { ...this.state.loading, scenarios: { state: \"failed\", message: msg } }});\r\n    },\r\n    this);\r\n  }\r\n\r\n  transformRecipeData(recipes) {\r\n    var transformed = {};\r\n\r\n    for (var recipe of recipes) {\r\n      if (recipe.manufactory === \"IngotRecipes\") {\r\n        continue;\r\n      }\r\n\r\n      if (!Object.keys(transformed).includes(recipe.item)) {\r\n        transformed[recipe.item] = {};\r\n      }\r\n\r\n      var remappedManufactory = MANUFACTORY_TO_THING[recipe.manufactory] || recipe.manufactory;\r\n\r\n      transformed[recipe.item][remappedManufactory] = recipe.ingredients;\r\n    }\r\n\r\n    return transformed;\r\n  }\r\n\r\n  loadData(url, success, failure, t) {\r\n    axios({ url: url, method: 'get', responseType: 'json' })\r\n    .then(function (response) {\r\n      success(t, response.data);\r\n    })\r\n    .catch(function (error) {                \r\n      failure(t, error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var allStates = [];\r\n\r\n    for (var key of Object.keys(this.state.loading)) {\r\n      allStates.push(this.state.loading[key].state);\r\n    }\r\n    \r\n    let isLoading = !(allStates.every((state) => state === \"success\"));\r\n    \r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3>Stationeers Reference ({this.state.data.desired} branch)</h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        {isLoading && <LoadingNotice states={this.state.loading} />}\r\n        {!isLoading && <GuideContent states={this.state} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass LoadingNotice extends Component {\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col md={12}>\r\n          <Panel>\r\n            <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\">Loading resources for guide...</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body>\r\n              <LoadState state={this.props.states.language} title=\"Language\" />\r\n              <LoadState state={this.props.states.things} title=\"Things\" />\r\n              <LoadState state={this.props.states.recipes} title=\"Recipes\" />\r\n              <LoadState state={this.props.states.scenarios} title=\"Scenarios\" />\r\n            </Panel.Body>\r\n          </Panel>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nclass LoadState extends Component {\r\n  render() {\r\n    if (this.props.state.state === \"success\") {\r\n      return null;\r\n    }\r\n\r\n    let icon = (this.props.state.state === \"unloaded\" || this.props.state.state === \"loading\") ? \"spinner\" : \"times-circle\";\r\n    let iconSpin = (this.props.state.state === \"unloaded\" || this.props.state.state === \"loading\");\r\n\r\n    let bsStyle = (this.props.state.state === \"unloaded\" || this.props.state.state === \"loading\") ? \"info\" : \"danger\";\r\n\r\n    return (\r\n      <Label bsStyle={bsStyle}><FontAwesomeIcon icon={icon} spin={iconSpin} /> {this.props.title}</Label>\r\n    )\r\n  }\r\n}\r\n\r\nclass GuideContent extends Component {\r\n  render() {\r\n    var currentKey;\r\n\r\n    if (window.location.pathname.startsWith('/guide/thing')) {\r\n      currentKey = 'things';\r\n    } else if (window.location.pathname.startsWith('/guide/scenarios')) {\r\n      currentKey = 'scenarios';\r\n    }\r\n\r\n    return(\r\n      <GuideContext.Provider value={{\r\n        things: this.props.states.data.things,\r\n        recipes: this.props.states.data.recipes,\r\n        scenarios: this.props.states.data.scenarios,\r\n        language: this.props.states.language.mapping.sections\r\n      }}>      \r\n        <Row>\r\n            <Col md={12}>\r\n                <Nav bsStyle=\"pills\" activeKey={currentKey}>\r\n                    <NavItem eventKey=\"things\" componentClass={NavLink} to=\"/guide/thing\" href=\"/guide/thing\">\r\n                        Things\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"scenarios\" componentClass={NavLink} to=\"/guide/scenarios\" href=\"/guide/scenarios\">\r\n                        Scenarios\r\n                    </NavItem>\r\n                </Nav>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Route path=\"/guide\" render={() => <Redirect to='/guide/thing' />} exact />\r\n        <Route path=\"/guide/thing\" component={ThingIndex} exact />\r\n        <Route path=\"/guide/thing/:prefab\" component={Thing} />\r\n        <Route path=\"/guide/scenarios\" component={Scenarios} />\r\n      </GuideContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst FLAGS = [\r\n  { flag: \"item\", icon: \"hand-holding\", title: \"Item\" },\r\n  { flag: \"tool\", icon: \"wrench\", title: \"Tool\" },\r\n  { flag: \"constructor\", icon: \"box-open\", title: \"Places Structure\" },\r\n  { flag: \"structure\", icon: \"industry\", title: \"Grid Structure\" },\r\n  { flag: \"smallGrid\", icon: \"chess-board\", title: \"Small Grid Structure\" },\r\n  { flag: \"logicable\", icon: \"microchip\", title: \"Has Logic Data\" },\r\n  { flag: \"atmospherics\", icon: \"wind\", title: \"Atmospherics\" },\r\n  { flag: \"plant\", icon: \"leaf\", title: \"Plant\" },\r\n  { flag: \"edible\", icon: \"utensils\", title: \"Edible\" },\r\n  { flag: \"paintable\", icon: \"spray-can\", title: \"Paintable\" },\r\n  { flag: \"entity\", icon: \"bug\", title: \"Entity\" },\r\n  { flag: \"npc\", icon: \"user-astronaut\", title: \"NPC Entity with AI\" },  \r\n]\r\n\r\nclass ThingIndex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { search: { term: \"\", flags: [] } }\r\n  }\r\n\r\n  render() {\r\n    let limit = 25;\r\n\r\n    return (\r\n      <Row>\r\n        <Col md={12}>        \r\n          <p />    \r\n          <Panel bsStyle=\"info\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"search\" /> Search</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup controlId=\"term\">\r\n                    <ControlLabel>Type a few letters that is in the items name:</ControlLabel>\r\n                    <FormControl type=\"text\" placeholder=\"Enter text\" onChange={(e) => this.changeSearchTerm(e.target.value)} />\r\n                    <HelpBlock><small>You will need to type three or more characters, list limited to {limit} results.</small></HelpBlock>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup controlId=\"flags\">\r\n                    <ControlLabel>Select categories to list:</ControlLabel>\r\n                    <p>\r\n                      {FLAGS.map(flag => <SearchFlag flag={flag.flag} icon={flag.icon} flags={this.state.search.flags} title={flag.title} onClick={this.changeSearchFlag.bind(this)} />)}\r\n                    </p>\r\n                    <HelpBlock><small>Selecting categories requires that things have <strong>all</strong> categories selected.</small></HelpBlock>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Panel.Body>\r\n          </Panel>\r\n          <ThingList filter={this.filter.bind(this)} limit={limit} />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  filter(context, key) {\r\n    var result = true;\r\n    var hasFiltered = false;\r\n\r\n    if (this.state.search.term.length >= 3) {\r\n      let term = this.state.search.term.toLowerCase();\r\n\r\n      result = result && (key.toLowerCase().includes(term) || (context.language.Things[key] || key).toLowerCase().includes(term))\r\n      hasFiltered = true;\r\n    }\r\n\r\n    if (this.state.search.flags.length > 0) {\r\n      for (var flag of this.state.search.flags) {\r\n        result = result && context.things[key].flags[flag];\r\n      }\r\n\r\n      hasFiltered = true;\r\n    }\r\n\r\n    return result && hasFiltered;\r\n  }\r\n\r\n  changeSearchTerm = this.debounce(searchTerm => {\r\n    this.setState({ search: { ...this.state.search, term: searchTerm }})\r\n  }, 500)\r\n\r\n  changeSearchFlag(flag, state) {\r\n    var currentFlags = this.state.search.flags;\r\n\r\n    if (state) {\r\n      currentFlags.push(flag);\r\n    } else {\r\n      currentFlags = currentFlags.filter((f) => f !== flag);\r\n    }\r\n\r\n    this.setState({ search: { ...this.state.search, flags: currentFlags }})\r\n  }\r\n\r\n  // eslint-disable-next-line\r\n  debounce(a,b,c){var d,e;return function(){function h(){d=null,c||(e=a.apply(f,g))}var f=this,g=arguments;return clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e}}\r\n}\r\n\r\nclass SearchFlag extends Component {\r\n  render() {\r\n    return (<abbr title={this.props.title} className=\"flag-toggle\"><FontAwesomeIcon size='2x' icon={this.props.icon} onClick={this.toggle.bind(this)} className={this.props.flags.includes(this.props.flag) ? \"\" : \"inactive\"} /></abbr>)\r\n  }\r\n\r\n  toggle(e) {\r\n    var newState = !this.props.flags.includes(this.props.flag);\r\n    this.props.onClick(this.props.flag, newState);\r\n  }\r\n}\r\n\r\nclass ThingList extends Component {\r\n  static contextType = GuideContext;\r\n\r\n  render() {\r\n    var thingKeys = Object.keys(this.context.things);\r\n\r\n    if (this.props.filter) {\r\n      thingKeys = thingKeys.filter((key) => this.props.filter(this.context, key));\r\n    }\r\n    \r\n    var limited = false;\r\n\r\n    if (this.props.limit && this.props.limit < thingKeys.length) {\r\n      thingKeys = thingKeys.slice(0, this.props.limit);\r\n      limited = true;\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        {limited && <Alert bsStyle='danger'><strong>List truncated as there are more than {this.props.limit} results.</strong></Alert>}\r\n        <Table condensed>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Prefab (Hash)</th>\r\n              <th colSpan={FLAGS.length}>Attributes</th>\r\n              <th>Made/Constructed By</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {thingKeys.map((key) => <ThingListItem key={key} prefab={key} />)}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ThingListItem extends Component {\r\n  static contextType = GuideContext;\r\n\r\n  render() {    \r\n    var prefab = this.props.prefab;\r\n    var thing = this.context.things[prefab];\r\n\r\n    var madeBy = Object.keys(this.context.recipes[prefab] || {}).sort();\r\n    var constructedBy = (thing.constructedBy || []).sort();\r\n\r\n    var creationOptions = [].concat(madeBy);\r\n    creationOptions = creationOptions.concat(constructedBy);\r\n\r\n    return (\r\n      <tr>\r\n        <td><ThingLink prefab={prefab} /></td>\r\n        <td><small className=\"text-info\">{prefab} ({thing.prefabHash})</small></td>\r\n        {FLAGS.map(flag => <ThingFlag flag={flag.flag} icon={flag.icon} flags={thing.flags} title={flag.title} />)}\r\n        <td>{creationOptions.map((thing) => <ThingLink prefab={thing} />).reduce((accu, elem) => {\r\n            return accu === null ? [elem] : [...accu, ', ', elem]\r\n        }, null)}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass ThingLink extends Component {\r\n  static contextType = GuideContext;\r\n\r\n  render() {\r\n    let destination = `/guide/thing/${this.props.prefab}`;\r\n    let title = this.context.language.Things[this.props.prefab] || this.props.prefab;\r\n\r\n    return (\r\n      <NavLink to={destination} href={destination}>{title}</NavLink>\r\n    );\r\n  }\r\n}\r\n\r\nclass Thing extends Component {\r\n  static contextType = GuideContext;\r\n\r\n  render() {\r\n    if (!Object.keys(this.context.things).includes(this.props.match.params.prefab)) {\r\n      return (\r\n        <Row>\r\n          <Col md={12}>    \r\n            Not Found\r\n          </Col>\r\n        </Row>\r\n        );\r\n    }\r\n    \r\n    let key = this.props.match.params.prefab;\r\n\r\n    let title = this.context.language.Things[key] || key;\r\n    let thing = this.context.things[key];\r\n\r\n    let makes = Object.keys(this.context.recipes).filter((made) => Object.keys(this.context.recipes[made]).includes(key));\r\n    let constructs = Object.keys(this.context.things).filter((rkey) => (this.context.things[rkey].constructedBy || []).includes(key));\r\n\r\n    return (\r\n      <Row>\r\n        <Col md={12}>    \r\n          <h4>{title}</h4>\r\n          <p>\r\n            <NavLink to='/guide' href='/guide'><FontAwesomeIcon icon='long-arrow-alt-left' /> Return to index</NavLink>\r\n          </p>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <ThingProperties thing={thing} name={key} />\r\n          <ThingTemperatures thing={thing} />\r\n        </Col>\r\n\r\n        {thing.logicTypes && <Col md={4}>\r\n          <ThingLogicTypes logicTypes={thing.logicTypes} />\r\n        </Col>}\r\n\r\n        {Object.keys(this.context.recipes[key] || {}).length > 0 && <Col md={4}>\r\n          <ThingMadeBy prefab={key} />\r\n        </Col>}\r\n\r\n        <Col md={4}>\r\n          {(thing.constructedBy || []).length > 0 && <ThingConstructedBy constructedBy={thing.constructedBy} />}\r\n\r\n          {constructs.length > 0 && <ThingConstructs constructs={constructs} />}\r\n\r\n          <ThingObjectHeirachy objectHeirachy={thing.objectHeirachy} />\r\n        </Col>\r\n\r\n        {makes.length > 0 && <Col md={12}>\r\n          <ThingMakes makes={makes} />\r\n        </Col>}\r\n      </Row>\r\n      );\r\n  }\r\n}\r\n\r\nclass ThingTemperatures extends Component {\r\n  render() {\r\n    return (<Panel>\r\n      <Panel.Heading>Temperatures</Panel.Heading>\r\n      <Table>\r\n      <tbody>\r\n        {this.props.thing.temperatures.shatter && <tr><th>Shatter</th><td>{this.props.thing.temperatures.shatter}K</td></tr>}\r\n        {this.props.thing.temperatures.flashpoint && <tr><th>Flash Point</th><td>{this.props.thing.temperatures.flashpoint}K</td></tr>}\r\n        {this.props.thing.temperatures.autoignition && <tr><th>Autoignition</th><td>{this.props.thing.temperatures.autoignition}K</td></tr>}\r\n      </tbody>\r\n      </Table>\r\n    </Panel>)\r\n  }\r\n}\r\n\r\nclass ThingProperties extends Component {\r\n  render() {\r\n    let thing = this.props.thing;\r\n\r\n    return (<Panel>\r\n      <Panel.Heading>Properties</Panel.Heading>\r\n      <Table>\r\n      <tbody>\r\n        <tr><th><FontAwesomeIcon icon=\"terminal\" /></th><th>Internal Name</th><td>{this.props.name}</td></tr>\r\n        <tr><th><FontAwesomeIcon icon=\"hashtag\" /></th><th>Hash</th><td>{thing.prefabHash}</td></tr>\r\n        {FLAGS.map(flag => <ThingPropertyFlag flag={flag.flag} icon={flag.icon} flags={thing.flags} title={flag.title} />)}\r\n      </tbody>\r\n      </Table>\r\n    </Panel>)\r\n  }\r\n}\r\n\r\nclass ThingPropertyFlag extends Component {\r\n  render() {\r\n    return (<tr><th><FontAwesomeIcon icon={this.props.icon} /></th><th>{this.props.title}</th><td>{this.props.flags[this.props.flag] ? \"Yes\" : \"No\"}</td></tr>);\r\n  }\r\n}\r\n\r\nclass ThingMakes extends Component {\r\n  render() {\r\n    return (<Panel>\r\n      <Panel.Heading>Makes</Panel.Heading>\r\n      <ThingList filter={(context, key) => this.props.makes.includes(key)} />         \r\n    </Panel>);\r\n  }\r\n}\r\n\r\nclass ThingConstructedBy extends Component {\r\n  render() {\r\n    return (<Panel>\r\n      <Panel.Heading>Constructed By</Panel.Heading>\r\n      <ListGroup>\r\n        {(this.props.constructedBy || []).map((thing) => {\r\n          return (<ListGroupItem><ThingLink prefab={thing} /></ListGroupItem>);\r\n        })}\r\n      </ListGroup>            \r\n    </Panel>);\r\n  }\r\n}\r\n\r\nclass ThingConstructs extends Component {\r\n  render() {\r\n    return (<Panel>\r\n      <Panel.Heading>Constructs</Panel.Heading>\r\n      <ListGroup>\r\n        {this.props.constructs.map((thing) => {\r\n          return (<ListGroupItem><ThingLink prefab={thing} /></ListGroupItem>);\r\n        })}\r\n      </ListGroup>            \r\n    </Panel>);\r\n  }\r\n}\r\n\r\nclass ThingLogicTypes extends Component {\r\n  render() {\r\n    return (<Panel>\r\n      <Panel.Heading>Logic Types</Panel.Heading>\r\n      <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Read</th>\r\n          <th>Write</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {Object.keys(this.props.logicTypes || {}).map((logicType) => {\r\n          return (\r\n            <tr>\r\n              <td>{logicType}</td>\r\n              <td>{this.props.logicTypes[logicType].read ? \"Yes\" : \"No\"}</td>\r\n              <td>{this.props.logicTypes[logicType].write ? \"Yes\" : \"No\"}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n      </Table>\r\n    </Panel>);\r\n  }\r\n}\r\n\r\nclass ThingMadeBy extends Component {\r\n  static contextType = GuideContext;\r\n\r\n  render() {\r\n    let recipes = this.context.recipes[this.props.prefab] || [];\r\n\r\n    return (<Panel>\r\n      <Panel.Heading>Made By</Panel.Heading>\r\n      <Panel.Body>\r\n\r\n      {Object.keys(recipes).map((manufactory) => {\r\n        return (\r\n          <div>\r\n            <h5><ThingLink prefab={manufactory} /></h5>\r\n            <Table condensed>\r\n              <thead>\r\n                <tr>\r\n                  <th>Reagent</th>\r\n                  <th>Quantity</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.keys(recipes[manufactory]).sort().map((ingredient) => {\r\n                  var name = this.context.language.Reagents[ingredient] ? this.context.language.Reagents[ingredient].name : ingredient;\r\n                  var unit = this.context.language.Reagents[ingredient] ? this.context.language.Reagents[ingredient].unit : \"\";\r\n                  return (\r\n                    <tr>\r\n                      <td>{name}</td>\r\n                      <td>{recipes[manufactory][ingredient]}{unit}</td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n            </div>\r\n        );\r\n      })}\r\n      </Panel.Body>\r\n    </Panel>);\r\n  }\r\n}\r\n\r\nclass ThingFlag extends Component {\r\n  render() {\r\n    if (!this.props.flags[this.props.flag]) {\r\n      return (<td />);\r\n    }\r\n\r\n    return (<td>\r\n      <abbr title={this.props.title}><FontAwesomeIcon icon={this.props.icon} /></abbr>\r\n    </td>)\r\n  }\r\n}\r\n\r\nclass ThingObjectHeirachy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { show: (sessionStorage.getItem('showCSharpHeirachy') || false) };\r\n  }\r\n\r\n  render() {\r\n    return (<Panel>\r\n      <Panel.Heading>C# Heirachy <FontAwesomeIcon className='pull-right' icon={this.state.show ? 'eye-slash' : 'eye'} onClick={this.onClick.bind(this)} /></Panel.Heading>\r\n      {this.state.show && <ListGroup>\r\n        {this.props.objectHeirachy.reverse().filter((el, i, a) => i === a.indexOf(el)).reverse().map((thing) => {\r\n          return (<ListGroupItem>{thing}</ListGroupItem>);\r\n        })}\r\n      </ListGroup>}    \r\n    </Panel>);\r\n  }\r\n\r\n  onClick(e) {\r\n    this.setState({ show: !this.state.show }, () => {\r\n      sessionStorage.setItem('showCSharpHeirachy', this.state.show);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Guide;","import React, { Component } from 'react';\r\nimport { FormGroup, InputGroup, Button, FormControl } from 'react-bootstrap';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCopy, faCog } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faCopy, faCog);\r\n\r\nclass ICPermalinkGenerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { lastGeneratedHash: undefined, lastGeneratedPermalink: undefined, requestState: \"idle\" };\r\n\r\n    this.beginGeneration = this.beginGeneration.bind(this);\r\n  }\r\n\r\n  render() {\r\n    var permalinkUpToDate = this.props.currentHash === this.state.lastGeneratedHash;\r\n    var generationInProgress = this.state.requestState !== \"idle\";\r\n    var feedback;\r\n    \r\n    if (this.state.requestMessage) {\r\n      var lastSuccess = this.state.lastRequest === \"success\";\r\n\r\n      feedback = <p><small class={lastSuccess ? \"text-success\" : \"text-danger\"}>{this.state.requestMessage}</small></p>\r\n    }\r\n    \r\n    return (\r\n      <FormGroup>\r\n        <InputGroup>\r\n          <FormControl type=\"text\" value={this.state.lastGeneratedPermalink} readOnly />\r\n          <InputGroup.Button>\r\n            <Button onClick={this.beginGeneration} disabled={permalinkUpToDate} bsStyle={permalinkUpToDate ? undefined : \"success\"}><FontAwesomeIcon icon=\"cog\" spin={generationInProgress} /></Button>\r\n            <CopyToClipboard text={this.state.lastGeneratedPermalink}>\r\n              <Button><FontAwesomeIcon icon=\"copy\" /></Button>\r\n            </CopyToClipboard>\r\n          </InputGroup.Button>                  \r\n        </InputGroup>        \r\n        {feedback}\r\n        <small>You can also share a program using the URL from the browser.</small>\r\n      </FormGroup>\r\n      );\r\n  }\r\n\r\n  beginGeneration() {\r\n    if (this.state.requestState !== \"idle\" || this.props.currentHash === this.state.lastGeneratedHash) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ requestState: \"requesting\", lastRequest: undefined, requestMessage: undefined });\r\n\r\n    var currentHash = this.props.currentHash;\r\n    var body = { state: currentHash };\r\n\r\n    var container = this;\r\n\r\n    axios({ url: 'https://api.stationeering.com/live/permalink', method: 'post', responseType: 'json', data: body })\r\n      .then(function (response) {\r\n        if (response.data.id) {\r\n          container.setState({ lastGeneratedPermalink: \"https://stationeering.com/tools/ic/\" + response.data.id, requestState: \"idle\", lastGeneratedHash: currentHash, lastRequest: \"success\", requestMessage: \"Successfully generated permalink!\" })\r\n        } else {\r\n          container.setState({ requestState: \"idle\", lastRequest: \"failed\", requestMessage: \"Invalid response from API!\" });\r\n        }\r\n      })\r\n      .catch(function (error) {  \r\n        if (error.response) {      \r\n          container.setState({ requestState: \"idle\", lastRequest: \"failed\", requestMessage: \"Invalid response from API! (\" + error.response.status + \")\" });\r\n        } else {\r\n          container.setState({ requestState: \"idle\", lastRequest: \"failed\", requestMessage: \"Failed to query API! (\" + error.message + \")\" })\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default ICPermalinkGenerator;","import React, { Component } from 'react';\r\nimport { Panel, Table } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faMemory, faTimes, faWrench } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faTimes, faMemory, faWrench);\r\n\r\nclass ICInternalRegisters extends Component {\r\n    render() {\r\n      return (\r\n        <Panel>\r\n          <Panel.Heading>\r\n            <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"memory\" /> Registers <FontAwesomeIcon icon=\"times\" className=\"pull-right interactive\" onClick={this.props.clearInternalRegisters} title=\"Clear registers.\" /></Panel.Title>\r\n          </Panel.Heading>\r\n          <Table condensed>\r\n            <thead>\r\n              <tr><th /><th>Set</th><th>Value</th><th>Label</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.renderRegisters()}\r\n            </tbody>\r\n          </Table>\r\n        </Panel>\r\n      );\r\n    }\r\n  \r\n    renderRegisters() {\r\n      if (this.props.registers) {\r\n        return this.props.registers.map((value, i) => <Register key={i} index={i} value={value} label={this.props.labels[i]} alias={this.props.aliases[i]} setRegister={this.props.setRegister} />);\r\n      }\r\n    }\r\n  }\r\n  \r\n  class Register extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = { inputValue: \"\" };\r\n  \r\n      this.onClick = this.onClick.bind(this);\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onKeyPress = this.onKeyPress.bind(this);\r\n    }\r\n  \r\n    roundTo(value, decimals) {\r\n      return Number(value.toFixed(decimals));\r\n    }\r\n  \r\n    render() {\r\n      var alias = [ this.props.alias, this.props.label ].filter((a) => a).join(\" / \");\r\n\r\n      return (\r\n        <tr className=\"register\">\r\n          <td>{this.props.index}</td>\r\n          <td><input type=\"text\" size=\"6\" onChange={this.onChange} onKeyPress={this.onKeyPress} value={this.state.inputValue} /> <button onClick={this.onClick}><FontAwesomeIcon icon=\"wrench\" /></button></td>\r\n          <td>{this.roundTo(this.props.value, 5)}</td>\r\n          <td>{alias}</td>\r\n        </tr>\r\n      );\r\n    }\r\n  \r\n    onChange(event) {\r\n      this.setState({ inputValue: event.target.value });\r\n    }\r\n  \r\n    onClick() {\r\n      var newVal = Number.parseFloat(this.state.inputValue);\r\n  \r\n      if (!Number.isNaN(newVal)) {\r\n        this.props.setRegister(\"internal\", this.props.index, Number.parseFloat(this.state.inputValue));\r\n        this.setState({ inputValue: \"\" });\r\n      }\r\n    }\r\n  \r\n    onKeyPress(event) {\r\n      if (event.key === \"Enter\") {\r\n        this.onClick();\r\n      }\r\n    }\r\n  }\r\n\r\n  export default ICInternalRegisters;\r\n","import React, { Component } from 'react';\r\nimport { Panel, Table, Col, Clearfix } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faArrowsAltH, faTrashAlt, faPlus, faWrench, faLink, faUnlink } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faArrowsAltH, faTrashAlt, faPlus, faWrench, faLink, faUnlink);\r\n\r\nclass ICIODevices extends Component {\r\n  chunk(arr, len) {\r\n    var chunks = [],\r\n        i = 0,\r\n        n = arr.length;\r\n  \r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n  \r\n    return chunks;\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Panel>\r\n        <Panel.Heading>\r\n          <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"arrows-alt-h\" /> Device (IO)</Panel.Title>\r\n        </Panel.Heading>\r\n        <Panel.Body>\r\n          {this.renderRegisters()}\r\n        </Panel.Body>\r\n      </Panel>\r\n    );\r\n  }\r\n\r\n  renderRegisters() {\r\n    if (this.props.registers) {\r\n\r\n      var registers = this.props.registers.map((register, i) => <ICIODevice key={i} index={i} name={this.props.names[i]} values={register} slots={this.props.slots[i]} reagents={this.props.reagents[i]} label={this.props.labels[i]} connected={this.props.connected[i]} setRegister={this.props.setRegister} setIOSlot={this.props.setIOSlot} setIOReagent={this.props.setIOReagent}  toggleLink={this.props.toggleLink} />);\r\n\r\n      var chunkedRegisters = this.chunk(registers, 2);\r\n      \r\n      return chunkedRegisters.map((chunk) => <Clearfix>{chunk}</Clearfix>)\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nclass ICIODevice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleLink = this.toggleLink.bind(this);\r\n  }\r\n\r\n  toggleLink() {\r\n    this.props.toggleLink(this.props.index);\r\n  }\r\n\r\n  render() {\r\n    var labelWithSeperator = (this.props.label ? \"(\" + this.props.label + \")\" : \"\");\r\n\r\n    return (\r\n      <Col md={6}>\r\n        <Panel bsStyle={this.props.connected ? \"default\" : \"danger\"}>\r\n          <Panel.Heading>\r\n            <Panel.Title componentClass=\"h5\">{this.props.name} {labelWithSeperator} <FontAwesomeIcon onClick={this.toggleLink} className=\"pull-right\" icon={this.props.connected ? \"link\" : \"unlink\"} /></Panel.Title>\r\n          </Panel.Heading>\r\n          <ICIORegisters index={this.props.index} setRegister={this.props.setRegister} values={this.props.values} />\r\n          <ICIOSlots index={this.props.index} setIOSlot={this.props.setIOSlot} slots={this.props.slots} />\r\n          <ICIOReagents index={this.props.index} setIOReagent={this.props.setIOReagent} reagents={this.props.reagents} />\r\n        </Panel>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nclass ICIORegisters extends Component {\r\n  render() {\r\n    return (\r\n      <Table condensed>\r\n      <thead>\r\n        <tr><th>Field</th><th>Set</th><th>Value</th></tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.renderFields()}\r\n        <ICNewIORegister registerIndex={this.props.index} setRegister={this.props.setRegister} />\r\n      </tbody>\r\n    </Table>\r\n    );\r\n  }\r\n\r\n  renderFields() {\r\n    return Object.keys(this.props.values).map((fieldName) => <ICIORegister key={fieldName} registerIndex={this.props.index} field={fieldName} value={this.props.values[fieldName]} setRegister={this.props.setRegister} />)\r\n  }\r\n}\r\n\r\nclass ICIOSlots extends Component {\r\n  render() {\r\n    return (\r\n      <Table condensed>\r\n      <thead>\r\n        <tr><th>Slot</th><th>Logic Type</th><th>Set</th><th>Value</th></tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.renderFields()}\r\n        <ICNewIOSlot registerIndex={this.props.index} setIOSlot={this.props.setIOSlot} />\r\n      </tbody>\r\n    </Table>\r\n    );\r\n  }\r\n\r\n  renderFields() {\r\n    var slots = [];\r\n\r\n    for (var slot of Object.keys(this.props.slots)) {\r\n      var slotData = this.props.slots[slot];\r\n\r\n      for (var logicType of Object.keys(slotData)) {\r\n        slots.push(<ICIOSlot key={slot+logicType} registerIndex={this.props.index} slot={slot} value={slotData[logicType]} logicType={logicType} setIOSlot={this.props.setIOSlot} />);\r\n      }\r\n    }\r\n\r\n    return slots;\r\n  }\r\n}\r\n\r\nclass ICIOReagents extends Component {\r\n  render() {\r\n    return (\r\n      <Table condensed>\r\n      <thead>\r\n        <tr><th>Reagent</th><th>Mode</th><th>Set</th><th>Value</th></tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.renderFields()}\r\n        <ICNewIOReagent registerIndex={this.props.index} setIOReagent={this.props.setIOReagent} />\r\n      </tbody>\r\n    </Table>\r\n    );\r\n  }\r\n\r\n  renderFields() {\r\n    var reagents = [];\r\n\r\n    for (var reagent of Object.keys(this.props.reagents)) {\r\n      var reagentData = this.props.reagents[reagent];\r\n\r\n      for (var reagentMode of Object.keys(reagentData)) {\r\n        reagents.push(<ICIOReagent key={reagent+reagentMode} registerIndex={this.props.index} reagent={reagent} value={reagentData[reagentMode]} reagentMode={reagentMode} setIOReagent={this.props.setIOReagent} />);\r\n      }\r\n    }\r\n\r\n    return reagents;\r\n  }\r\n}\r\n\r\nclass ICIORegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { inputValue: \"\" };\r\n\r\n    this.onClickUpdate = this.onClickUpdate.bind(this);\r\n    this.onClickRemove = this.onClickRemove.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }  \r\n  \r\n  roundTo(value, decimals) {\r\n    return Number(value.toFixed(decimals));\r\n  }\r\n\r\n  render() {\r\n    return (<tr>\r\n      <td>{this.props.field}</td>\r\n      <td><input type=\"text\" size=\"4\" onChange={this.onChange} onKeyPress={this.onKeyPress} value={this.state.inputValue} /> <button onClick={this.onClickUpdate}><FontAwesomeIcon icon=\"wrench\" /></button> <button onClick={this.onClickRemove}><FontAwesomeIcon icon=\"trash-alt\" /></button></td>\r\n      <td>{this.roundTo(this.props.value, 5)}</td>\r\n    </tr>\r\n    );\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({ inputValue: event.target.value });\r\n  }\r\n\r\n  onClickUpdate() {\r\n    var newVal = Number.parseFloat(this.state.inputValue);\r\n\r\n    if (!Number.isNaN(newVal)) {\r\n      this.props.setRegister(\"io\", this.props.registerIndex, Number.parseFloat(this.state.inputValue), this.props.field);\r\n      this.setState({ inputValue: \"\" });\r\n    }\r\n  }\r\n\r\n  onClickRemove() {\r\n    this.props.setRegister(\"io\", this.props.registerIndex, undefined, this.props.field);\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.onClickUpdate();\r\n    }\r\n  }\r\n}\r\n\r\nclass ICNewIORegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { inputField: \"\", inputValue: \"\" };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n    this.onChangeField = this.onChangeField.bind(this);\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }  \r\n  \r\n  render() {\r\n    return (<tr>\r\n      <td><input type=\"text\" size=\"6\" onChange={this.onChangeField} value={this.state.inputField} /></td>\r\n      <td><input type=\"text\" size=\"4\" onChange={this.onChangeValue} onKeyPress={this.onKeyPress} value={this.state.inputValue} /> <button onClick={this.onClick}><FontAwesomeIcon icon=\"plus\" size=\"sm\" /></button></td>\r\n      <td />\r\n    </tr>\r\n    );\r\n  }\r\n\r\n  onChangeField(event) {\r\n    this.setState({ inputField: event.target.value });\r\n  }\r\n\r\n  onChangeValue(event) {\r\n    this.setState({ inputValue: event.target.value });\r\n  }\r\n\r\n  onClick() {\r\n    var newVal = Number.parseFloat(this.state.inputValue);\r\n\r\n    if (!Number.isNaN(newVal) && this.state.inputField !== \"\") {\r\n      this.props.setRegister(\"io\", this.props.registerIndex, Number.parseFloat(this.state.inputValue), this.state.inputField );\r\n      this.setState({ inputValue: \"\", inputField: \"\" });\r\n    }\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.onClick();\r\n    }\r\n  }\r\n}\r\n\r\nclass ICIOSlot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { inputValue: \"\" };\r\n\r\n    this.onClickUpdate = this.onClickUpdate.bind(this);\r\n    this.onClickRemove = this.onClickRemove.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }  \r\n  \r\n  roundTo(value, decimals) {\r\n    return Number(value.toFixed(decimals));\r\n  }\r\n\r\n  render() {\r\n    return (<tr>\r\n      <td>{this.props.slot}</td>\r\n      <td>{this.props.logicType}</td>\r\n      <td><input type=\"text\" size=\"4\" onChange={this.onChange} onKeyPress={this.onKeyPress} value={this.state.inputValue} /> <button onClick={this.onClickUpdate}><FontAwesomeIcon icon=\"wrench\" size=\"sm\" /></button> <button onClick={this.onClickRemove}><FontAwesomeIcon icon=\"trash-alt\" /></button></td>\r\n      <td>{this.roundTo(this.props.value, 5)}</td>\r\n    </tr>\r\n    );\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({ inputValue: event.target.value });\r\n  }\r\n\r\n  onClickUpdate() {\r\n    var newVal = Number.parseFloat(this.state.inputValue);\r\n\r\n    if (!Number.isNaN(newVal)) {\r\n      this.props.setIOSlot(this.props.registerIndex, this.props.slot, this.props.logicType, newVal);\r\n      this.setState({ inputValue: \"\" });\r\n    }\r\n  }\r\n\r\n  onClickRemove() {\r\n    this.props.setIOSlot(this.props.registerIndex, this.props.slot, this.props.logicType, undefined);\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.onClickUpdate();\r\n    }\r\n  }\r\n}\r\n\r\nclass ICNewIOSlot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { inputSlot: \"\", inputLogicType: \"\", inputValue: \"\" };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n    this.onChangeSlot = this.onChangeSlot.bind(this);\r\n    this.onChangeLogicType = this.onChangeLogicType.bind(this);\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }  \r\n  \r\n  render() {\r\n    return (<tr>\r\n      <td><input type=\"text\" size=\"6\" onChange={this.onChangeSlot} onKeyPress={this.onKeyPress} value={this.state.inputSlot} /></td>\r\n      <td><input type=\"text\" size=\"6\" onChange={this.onChangeLogicType} value={this.state.inputLogicType} /></td>\r\n      <td><input type=\"text\" size=\"4\" onChange={this.onChangeValue} onKeyPress={this.onKeyPress} value={this.state.inputValue} /> <button onClick={this.onClick}><FontAwesomeIcon icon=\"plus\" size=\"sm\" /></button></td>\r\n      <td />\r\n    </tr>\r\n    );\r\n  }\r\n\r\n  onChangeSlot(event) {\r\n    this.setState({ inputSlot: event.target.value });\r\n  }\r\n\r\n  onChangeLogicType(event) {\r\n    this.setState({ inputLogicType: event.target.value });\r\n  }\r\n\r\n  onChangeValue(event) {\r\n    this.setState({ inputValue: event.target.value });\r\n  }\r\n\r\n  onClick() {\r\n    var value = Number.parseFloat(this.state.inputValue);    \r\n    var slot = Number.parseInt(this.state.inputSlot, 10);\r\n\r\n    if (!Number.isNaN(value) && !Number.isNaN(slot) && this.state.inputLogicType !== \"\") {\r\n      this.props.setIOSlot(this.props.registerIndex, slot, this.state.inputLogicType, value);\r\n      this.setState({ inputValue: \"\", inputSlot: \"\", inputLogicType: \"\" });\r\n    }\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.onClick();\r\n    }\r\n  }\r\n}\r\n\r\nclass ICIOReagent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { inputValue: \"\" };\r\n\r\n    this.onClickUpdate = this.onClickUpdate.bind(this);\r\n    this.onClickRemove = this.onClickRemove.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }  \r\n  \r\n  roundTo(value, decimals) {\r\n    return Number(value.toFixed(decimals));\r\n  }\r\n\r\n  render() {\r\n    return (<tr>\r\n      <td>{this.props.reagent}</td>\r\n      <td>{this.props.reagentMode}</td>\r\n      <td><input type=\"text\" size=\"4\" onChange={this.onChange} onKeyPress={this.onKeyPress} value={this.state.inputValue} /> <button onClick={this.onClickUpdate}><FontAwesomeIcon icon=\"wrench\" size=\"sm\" /></button> <button onClick={this.onClickRemove}><FontAwesomeIcon icon=\"trash-alt\" /></button></td>\r\n      <td>{this.roundTo(this.props.value, 5)}</td>\r\n    </tr>\r\n    );\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({ inputValue: event.target.value });\r\n  }\r\n\r\n  onClickUpdate() {\r\n    var newVal = Number.parseFloat(this.state.inputValue);\r\n\r\n    if (!Number.isNaN(newVal)) {\r\n      this.props.setIOReagent(this.props.registerIndex, this.props.reagent, this.props.reagentMode, newVal);\r\n      this.setState({ inputValue: \"\" });\r\n    }\r\n  }\r\n\r\n  onClickRemove() {\r\n    this.props.setIOReagent(this.props.registerIndex, this.props.reagent, this.props.reagentMode, undefined);\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.onClickUpdate();\r\n    }\r\n  }\r\n}\r\n\r\nclass ICNewIOReagent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { inputReagent: \"\", inputReagentMode: \"\", inputValue: \"\" };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n    this.onChangeReagent = this.onChangeReagent.bind(this);\r\n    this.onChangeReagentMode = this.onChangeReagentMode.bind(this);\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }  \r\n  \r\n  render() {\r\n    return (<tr>\r\n      <td><input type=\"text\" size=\"6\" onChange={this.onChangeReagent} onKeyPress={this.onKeyPress} value={this.state.inputReagent} /></td>\r\n      <td><input type=\"text\" size=\"6\" onChange={this.onChangeReagentMode} value={this.state.inputReagentMode} /></td>\r\n      <td><input type=\"text\" size=\"4\" onChange={this.onChangeValue} onKeyPress={this.onKeyPress} value={this.state.inputValue} /> <button onClick={this.onClick}><FontAwesomeIcon icon=\"plus\" size=\"sm\" /></button></td>\r\n      <td />\r\n    </tr>\r\n    );\r\n  }\r\n\r\n  onChangeReagent(event) {\r\n    this.setState({ inputReagent: event.target.value });\r\n  }\r\n\r\n  onChangeReagentMode(event) {\r\n    this.setState({ inputReagentMode: event.target.value });\r\n  }\r\n\r\n  onChangeValue(event) {\r\n    this.setState({ inputValue: event.target.value });\r\n  }\r\n\r\n  onClick() {\r\n    var value = Number.parseFloat(this.state.inputValue);    \r\n\r\n    if (!Number.isNaN(value) && this.state.inputReagent !== \"\" && this.state.inputReagentMode !== \"\") {\r\n      this.props.setIOReagent(this.props.registerIndex, this.state.inputReagent, this.state.inputReagentMode, value);\r\n      this.setState({ inputReagent: \"\", inputReagentMode: \"\", inputValue: \"\" });\r\n    }\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.onClick();\r\n    }\r\n  }\r\n}\r\n\r\nexport default ICIODevices;\r\n","import React, { Component } from 'react';\r\nimport { Panel, Table } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faBars, faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faBars, faArrowDown, faArrowUp);\r\n\r\nclass ICStack extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { truncated: true };\r\n        this.toggleTruncated = this.toggleTruncated.bind(this);\r\n    }\r\n\r\n    toggleTruncated() {\r\n        this.setState({ truncated: !this.state.truncated });\r\n    }\r\n\r\n    chunk(arr, len) {\r\n        var chunks = [],\r\n            i = 0,\r\n            n = arr.length;\r\n\r\n        while (i < n) {\r\n            chunks.push(arr.slice(i, i += len));\r\n        }\r\n\r\n        return chunks;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Panel>\r\n                <Panel.Heading>\r\n                    <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"bars\" /> Stack <FontAwesomeIcon onClick={this.toggleTruncated} icon={this.state.truncated ? \"arrow-down\" : \"arrow-up\"} className=\"pull-right\" /></Panel.Title>\r\n                </Panel.Heading>\r\n                <Table condensed>\r\n                    <tbody>\r\n                        {this.renderStackValues()}\r\n                    </tbody>\r\n                </Table>\r\n                <Panel.Footer><small>Stack displayed here is truncated to 16 entries until it is used, maximum is still 512. Click the top right arrow to toggle truncation.</small></Panel.Footer>\r\n            </Panel>\r\n        );\r\n    }\r\n\r\n    renderStackValues() {\r\n        if (!this.props.stack) {\r\n            return null;\r\n        }\r\n\r\n        var maxValue = 0;\r\n\r\n        if (this.state.truncated) {\r\n            for (var i = 0; i < this.props.stack.length; i++) {\r\n                if (this.props.stack[i] !== 0) {\r\n                    maxValue = i;\r\n                }\r\n            }\r\n\r\n            if (maxValue === 0) {\r\n                maxValue = 16;\r\n            } else {\r\n                maxValue += (8 - (maxValue % 8));\r\n            }\r\n        } else {\r\n            maxValue = this.props.stack.length;\r\n        }\r\n\r\n        var entries = this.props.stack.map((value, i) => <ICStackEntry key={i} i={i} value={value} current={(i === this.props.ptr)} />);\r\n\r\n        entries = entries.slice(0, maxValue);\r\n\r\n        var chunkedEntries = this.chunk(entries, 8);\r\n\r\n        return chunkedEntries.map((entries) => <tr>{entries}</tr>)\r\n    }\r\n}\r\n\r\nclass ICStackEntry extends Component {\r\n    render() {\r\n        return (\r\n            <td className={(this.props.current ? \"bg-success\" : \"\")}><small className=\"text-muted\">{this.props.i}:</small> {this.props.value}</td>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ICStack;\r\n","import React, { Component } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nclass ICProgramErrors extends Component {\r\n    render() {\r\n        if (this.props.errors.length > 0) {\r\n            var style = this.props.errorType === \"error\" ? \"danger\" : \"warning\";\r\n\r\n            return (\r\n                <Alert bsStyle={style}>\r\n                    <strong>Parsing {this.props.errorTitle}</strong>\r\n                    <ul className=\"programErrors\">\r\n                        {this.renderErrors(this.props.errors)}\r\n                    </ul>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderErrors(errors) {\r\n        return this.props.errors.map((error, i) => <ProgramError key={i} error={error} />)\r\n    }\r\n}\r\n\r\nclass ProgramError extends Component {\r\n    render() {\r\n        let line = this.props.error.line;\r\n        let error = this.props.error.error;\r\n        let field = Number.isInteger(this.props.error.field) ? ` / Field ${this.props.error.field}` : \"\";\r\n        let validTypes = this.props.error.validTypes;\r\n        let errorDescription = this.lookUpError(error, validTypes);\r\n\r\n        return (\r\n            <li className=\"programError\">Line {line}{field}: {errorDescription} ({error}) </li>\r\n        );\r\n    }\r\n\r\n    lookUpError(error, validTypes) {\r\n        switch (error) {\r\n            case \"INVALID_FIELD_NO_SUCH_REGISTER\":\r\n                return \"The register number you have specified does not exist.\";\r\n            case \"INVALID_FIELD_INVALID_TYPE\":\r\n                return \"Field provided for instruction is invalid, it requires one of these: \" + this.resolveValidTypes(validTypes)\r\n            case \"MISSING_FIELD\":\r\n                return \"Instruction requires an additional field in this position.\";\r\n            case \"UNKNOWN_INSTRUCTION\":\r\n                return \"The instruction you have specified does not exist, check the spelling.\";\r\n            case \"LINE_TOO_LONG\":\r\n                return \"The line is more than 52 characters, reduce the length.\";\r\n            case \"PROGRAM_TOO_LONG\":\r\n                return \"The program is too long, only 128 instructions/lines are permitted.\";\r\n            case \"INVALID_JUMP_TAG_DUPLICATE\":\r\n                return \"The jump tag has already been used above this tag in the program.\";\r\n            case \"INVALID_JUMP_TAG_CONTENT_AFTER\":\r\n                return \"There is content after the jump tag, currently not permitted.\";\r\n            default:\r\n                return \"Unknown error.\"\r\n        }\r\n    }\r\n\r\n    resolveValidTypes(validTypes) {\r\n        const TYPES = { r: \"register\", d: \"device\", a: \"alias\", j: \"jump tag\", i: \"integer\", f: \"float\", s: \"string\" };\r\n        return validTypes.map((type) => TYPES[type] ? TYPES[type] : type).join(\", \");\r\n    }\r\n}\r\n\r\nexport default ICProgramErrors;","/* eslint-disable */\r\n\r\nimport ace from 'brace';\r\nimport IC from 'stationeers-ic';\r\n\r\nace.define(\"ace/mode/sis_assembler_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\r\n  \"use strict\";\r\n  \r\n  var oop = acequire(\"../lib/oop\");\r\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\r\n  \r\n  var ic = new IC();\r\n\r\n  var SISAssemblerHighlightRules = function() {\r\n      let instructionFooter = \"\\\\b(?:\";\r\n      let instructionSuffix = \")\\\\b\";\r\n\r\n      let instructions = ic.getInstructions();\r\n      let instructionKeys = Object.keys(instructions);\r\n\r\n      let instructionRegex = instructionFooter + instructionKeys.join(\"|\") + instructionSuffix;\r\n\r\n      this.$rules = { start: \r\n         [ { token: 'support.function.sis',\r\n             regex: instructionRegex },\r\n           { token: 'string.sis',\r\n             regex: '\\\\b([A-Za-z0-9_]+)(:)' },\r\n           { token: 'variable.language.sis',\r\n             regex: '\\\\b(r*\\\\d+)\\\\b' },\r\n          { token: 'variable.language.sis',\r\n             regex: '\\\\b(d(b|r*\\\\d+))\\\\b' },\r\n           { token: 'punctuation.definition.comment.sis',\r\n             regex: '#',\r\n             push: \r\n              [ { token: 'comment.line.number-sign.sis',\r\n                  regex: '$',\r\n                  next: 'pop' },\r\n                { defaultToken: 'comment.line.number-sign.sis' } ] } ] }\r\n      \r\n      this.normalizeRules();\r\n  };\r\n  \r\n  SISAssemblerHighlightRules.metaData = { fileTypes: [ 's', 'sis', 'spim', 'asm' ],\r\n        keyEquivalent: '^~M',\r\n        name: 'SIS Assembler',\r\n        scopeName: 'source.sis' }\r\n  \r\n  \r\n  oop.inherits(SISAssemblerHighlightRules, TextHighlightRules);\r\n  \r\n  exports.SISAssemblerHighlightRules = SISAssemblerHighlightRules;\r\n  });\r\n  \r\n  ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\r\n  \"use strict\";\r\n  \r\n  var oop = acequire(\"../../lib/oop\");\r\n  var Range = acequire(\"../../range\").Range;\r\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\r\n  \r\n  var FoldMode = exports.FoldMode = function(commentRegex) {\r\n      if (commentRegex) {\r\n          this.foldingStartMarker = new RegExp(\r\n              this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n          );\r\n          this.foldingStopMarker = new RegExp(\r\n              this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n          );\r\n      }\r\n  };\r\n  oop.inherits(FoldMode, BaseFoldMode);\r\n  \r\n  (function() {\r\n      \r\n      this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\r\n      this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\r\n      this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n      this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n      this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#region\\b/;\r\n      this._getFoldWidgetBase = this.getFoldWidget;\r\n      this.getFoldWidget = function(session, foldStyle, row) {\r\n          var line = session.getLine(row);\r\n      \r\n          if (this.singleLineBlockCommentRe.test(line)) {\r\n              if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                  return \"\";\r\n          }\r\n      \r\n          var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n      \r\n          if (!fw && this.startRegionRe.test(line))\r\n              return \"start\"; // lineCommentRegionStart\r\n      \r\n          return fw;\r\n      };\r\n  \r\n      this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n          var line = session.getLine(row);\r\n          \r\n          if (this.startRegionRe.test(line))\r\n              return this.getCommentRegionBlock(session, line, row);\r\n          \r\n          var match = line.match(this.foldingStartMarker);\r\n          if (match) {\r\n              var i = match.index;\r\n  \r\n              if (match[1])\r\n                  return this.openingBracketBlock(session, match[1], row, i);\r\n                  \r\n              var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n              \r\n              if (range && !range.isMultiLine()) {\r\n                  if (forceMultiline) {\r\n                      range = this.getSectionRange(session, row);\r\n                  } else if (foldStyle != \"all\")\r\n                      range = null;\r\n              }\r\n              \r\n              return range;\r\n          }\r\n  \r\n          if (foldStyle === \"markbegin\")\r\n              return;\r\n  \r\n          var match = line.match(this.foldingStopMarker);\r\n          if (match) {\r\n              var i = match.index + match[0].length;\r\n  \r\n              if (match[1])\r\n                  return this.closingBracketBlock(session, match[1], row, i);\r\n  \r\n              return session.getCommentFoldRange(row, i, -1);\r\n          }\r\n      };\r\n      \r\n      this.getSectionRange = function(session, row) {\r\n          var line = session.getLine(row);\r\n          var startIndent = line.search(/\\S/);\r\n          var startRow = row;\r\n          var startColumn = line.length;\r\n          row = row + 1;\r\n          var endRow = row;\r\n          var maxRow = session.getLength();\r\n          while (++row < maxRow) {\r\n              line = session.getLine(row);\r\n              var indent = line.search(/\\S/);\r\n              if (indent === -1)\r\n                  continue;\r\n              if  (startIndent > indent)\r\n                  break;\r\n              var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n              \r\n              if (subRange) {\r\n                  if (subRange.start.row <= startRow) {\r\n                      break;\r\n                  } else if (subRange.isMultiLine()) {\r\n                      row = subRange.end.row;\r\n                  } else if (startIndent == indent) {\r\n                      break;\r\n                  }\r\n              }\r\n              endRow = row;\r\n          }\r\n          \r\n          return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n      };\r\n      \r\n      this.getCommentRegionBlock = function(session, line, row) {\r\n          var startColumn = line.search(/\\s*$/);\r\n          var maxRow = session.getLength();\r\n          var startRow = row;\r\n          \r\n          var re = /^\\s*(?:\\/\\*|\\/\\/)#(end)?region\\b/;\r\n          var depth = 1;\r\n          while (++row < maxRow) {\r\n              line = session.getLine(row);\r\n              var m = re.exec(line);\r\n              if (!m) continue;\r\n              if (m[1]) depth--;\r\n              else depth++;\r\n  \r\n              if (!depth) break;\r\n          }\r\n  \r\n          var endRow = row;\r\n          if (endRow > startRow) {\r\n              return new Range(startRow, startColumn, endRow, line.length);\r\n          }\r\n      };\r\n  \r\n  }).call(FoldMode.prototype);\r\n  \r\n  });\r\n  \r\n  ace.define(\"ace/mode/sis_assembler\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/sis_assembler_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\r\n  \"use strict\";\r\n  \r\n  var oop = acequire(\"../lib/oop\");\r\n  var TextMode = acequire(\"./text\").Mode;\r\n  var SISAssemblerHighlightRules = acequire(\"./sis_assembler_highlight_rules\").SISAssemblerHighlightRules;\r\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\r\n  \r\n  var Mode = function() {\r\n      this.HighlightRules = SISAssemblerHighlightRules;\r\n      this.foldingRules = new FoldMode();\r\n  };\r\n  oop.inherits(Mode, TextMode);\r\n  \r\n  (function() {\r\n      this.$id = \"ace/mode/sis_assembler\"\r\n  }).call(Mode.prototype);\r\n  \r\n  exports.Mode = Mode;\r\n  });\r\n  ","import React, { Component } from 'react';\r\nimport IC from 'stationeers-ic';\r\nimport { Row, Col, Panel, Table, ButtonToolbar, Button, ButtonGroup } from 'react-bootstrap';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport ICPermalinkGenerator from './ICPermalinkGenerator';\r\nimport ICInternalRegisters from './ICInternalRegisters';\r\nimport ICIODevices from './ICIODevices';\r\nimport ICStack from './ICStack';\r\nimport ICProgramErrors from './ICProgramErrors';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTerminal, faGamepad, faCogs, faMemory, faLongArrowAltLeft, faLongArrowAltRight, faTimes, faStepForward, faPlay, faRedo, faEye, faAngleDoubleRight, faBook, faLightbulb, faListUl, faPen, faFile, faMicrochip, faArrowsAltH, faBug } from '@fortawesome/free-solid-svg-icons';\r\nimport { faReddit } from '@fortawesome/free-brands-svg-icons';\r\n\r\n// eslint-disable-next-line\r\nimport brace from 'brace';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport './SISAssembler';\r\nimport 'brace/theme/github';\r\nimport 'brace/ext/searchbox';\r\n\r\nimport './ICSocket.css';\r\n\r\nlibrary.add(faTerminal, faGamepad, faCogs, faMemory, faLongArrowAltLeft, faLongArrowAltRight, faTimes, faStepForward, faPlay, faRedo, faEye, faAngleDoubleRight, faBook, faLightbulb, faListUl, faPen, faReddit, faFile, faMicrochip, faArrowsAltH, faBug);\r\n\r\nclass ICSocket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.programChange = this.programChange.bind(this);\r\n    this.step = this.step.bind(this);\r\n    this.runSingle = this.runSingle.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.restart = this.restart.bind(this);\r\n    this.clearInternalRegisters = this.clearInternalRegisters.bind(this);\r\n    this.setRegister = this.setRegister.bind(this);\r\n    this.toggleRunAfterRegisterChange = this.toggleRunAfterRegisterChange.bind(this);\r\n    this.toggleRunWithErrors = this.toggleRunWithErrors.bind(this);\r\n    this.hashChanged = this.hashChanged.bind(this);  \r\n    this.toggleLink = this.toggleLink.bind(this);\r\n    this.setIOSlot = this.setIOSlot.bind(this);\r\n    this.setIOReagent = this.setIOReagent.bind(this);\r\n\r\n    let defaultCode = \"start:\\nadd r0 r0 1 # Increment r0.\\nyield\\nj start\";\r\n\r\n    this.state = { ic: new IC(), program: defaultCode, errors: [], labels: { internal: [] }, runAfterRegisterChange: false, runWithErrors: false, currentHash: \"\" };\r\n    this.loadProgram(defaultCode);    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadStateFromHash();\r\n    this.transferICState();\r\n    \r\n    window.addEventListener(\"hashchange\", this.hashChanged, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"hashchange\", this.hashChanged, false);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.saveStateToHash();\r\n  }\r\n\r\n  hashChanged(event) {\r\n    this.loadStateFromHash();\r\n  }\r\n\r\n  loadStateFromHash() {\r\n    if (window.location.hash.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    let rawHash = window.location.hash.substring(1);\r\n\r\n    if (rawHash === this.state.currentHash) {\r\n      return {};\r\n    }\r\n\r\n    let json = atob(rawHash);\r\n    let data = JSON.parse(json);\r\n\r\n    let returnData = { currentHash: rawHash };\r\n\r\n    if (data.hasOwnProperty(\"program\")) {\r\n      returnData[\"program\"] = data.program;\r\n      this.loadProgram(data.program);\r\n    }\r\n\r\n    if (data.hasOwnProperty(\"runAfterRegisterChange\")) {\r\n      returnData[\"runAfterRegisterChange\"] = data.runAfterRegisterChange;\r\n    }\r\n\r\n    if (data.hasOwnProperty(\"runWithErrors\")) {\r\n      returnData[\"runWithErrors\"] = data.runWithErrors;\r\n      this.state.ic.setIgnoreErrors(data.runWithErrors);\r\n    }\r\n\r\n    if (data.hasOwnProperty(\"registers\")) {\r\n      Object.keys(data.registers).forEach((key) => {\r\n        data.registers[key].forEach((value, i) => {\r\n          switch (key) {\r\n            case \"io\":\r\n              var deviceFields = Object.keys(value);\r\n\r\n              for (let field of deviceFields) {\r\n                this.state.ic.setIORegister(i, field, value[field]);\r\n              }\r\n              \r\n              break;\r\n            case \"internal\":\r\n              this.state.ic.setInternalRegister(i, value);\r\n              break;\r\n            case \"ioConnected\": \r\n              this.state.ic.setIOConnected(i, value);\r\n              break;\r\n            case \"ioSlot\":\r\n              for (var slot of Object.keys(value)) {\r\n                for (var logicType of Object.keys(value[slot])) {\r\n                  this.state.ic.setIOSlot(i, slot, logicType, value[slot][logicType]);\r\n                }\r\n              }              \r\n              break;\r\n            case \"ioReagent\":\r\n              for (var reagent of Object.keys(value)) {\r\n                for (var mode of Object.keys(value[reagent])) {\r\n                  this.state.ic.setIOReagent(i, reagent, mode, value[reagent][mode]);\r\n                }\r\n              }\r\n              break;\r\n            default:            \r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    this.setState(returnData);\r\n  }\r\n\r\n  saveStateToHash() {\r\n    let data = { program: this.state.program, registers: { io: this.state.ioRegisters, ioConnected: this.state.ioConnected, internal: this.state.internalRegisters, ioSlot: this.state.ioSlots, ioReagent: this.state.ioReagents }, runAfterRegisterChange: this.state.runAfterRegisterChange, runWithErrors: this.state.runWithErrors };\r\n    let json = JSON.stringify(data);\r\n    let base64 = btoa(json);\r\n\r\n    if (this.state.currentHash !== base64) {\r\n      window.location.hash = base64;\r\n      this.setState({ currentHash: base64 })\r\n    }\r\n  }\r\n\r\n  transferICState() {\r\n    let ic = this.state.ic;\r\n\r\n    this.setState({\r\n      ioNames: ic.getIONames(),\r\n      ioLabels: ic.getIOLabels(),\r\n      ioRegisters: ic.getIORegisters(),\r\n      ioSlots: ic.getIOSlots(),\r\n      ioReagents: ic.getIOReagents(),\r\n      ioConnected: ic.getIOConnected(),\r\n      internalLabels: ic.getInternalLabels(),\r\n      internalRegisters: ic.getInternalRegisters(),\r\n      programCounter: ic.programCounter(),\r\n      instructionCount: ic.getInstructionCount(),\r\n      stack: ic.getStack(),\r\n      lastRunCount: 0,\r\n      lastStepState: \"\",\r\n      lastExecuteTime: \"Not Run\"\r\n    });\r\n  }\r\n\r\n  canRun() {\r\n    return !(this.state.ic.programCounter() >= this.state.ic.getInstructionCount()) || (this.state.errors.length > 0);\r\n  }\r\n\r\n  formatCodeForDiscord() {\r\n    return \"```mips\\n\" + this.state.program + \"\\n```\";\r\n  }\r\n\r\n  formatCodeForReddit() {\r\n    return this.state.program.trim().split(\"\\n\").map((line) => \"    \" + line).join(\"\\n\");\r\n  }\r\n\r\n  toggleLink(index) {\r\n    this.state.ic.setIOConnected(index, !this.state.ioConnected[index]);\r\n    this.transferICState();\r\n  }\r\n\r\n  render() {\r\n    var inactive = !this.canRun() ? \"interactive inactive\" : \"interactive\";    \r\n\r\n    var markers = [{startRow: this.state.ic.programCounter(), endRow: this.state.ic.programCounter(), endCol: 20000, type: \"line\", className: 'currentLine'}];\r\n    var annotations = this.state.errors.map((error) => { return { row: error.line, column: 0, type: error.type, \"text\": error.error }});\r\n\r\n    return (\r\n      <div className=\"ICSocket\">\r\n        <Row>\r\n          <Col md={8}>         \r\n            <ICIODevices registers={this.state.ioRegisters} slots={this.state.ioSlots} reagents={this.state.ioReagents} setRegister={this.setRegister} setIOSlot={this.setIOSlot} setIOReagent={this.setIOReagent} labels={this.state.ioLabels} names={this.state.ioNames} connected={this.state.ioConnected} toggleLink={this.toggleLink} /> \r\n            <ICStack stack={this.state.stack} ptr={(this.state.internalRegisters ? this.state.internalRegisters[16] : 0)} />\r\n          </Col>\r\n          <Col md={4}>\r\n            <ICInternalRegisters registers={this.state.internalRegisters} setRegister={this.setRegister} clearInternalRegisters={this.clearInternalRegisters} labels={this.state.labels.internal} aliases={this.state.internalLabels} />\r\n          </Col>\r\n        </Row>      \r\n        <Row>\r\n          <Col md={8}>\r\n            <Panel>\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"terminal\" /> Program</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <p>\r\n                <AceEditor\r\n                  mode=\"sis_assembler\"\r\n                  theme=\"github\"\r\n                  onChange={this.programChange}\r\n                  value={this.state.program}\r\n                  name=\"AceEditorMips\"\r\n                  setOptions={{firstLineNumber: 0}}\r\n                  debounceChangePeriod={500}\r\n                  height=\"400px\"\r\n                  width=\"100%\"\r\n                  fontSize={16}\r\n                  ref=\"editor\"\r\n                  markers={markers}\r\n                  annotations={annotations}\r\n                />\r\n                </p>\r\n                <div>\r\n                  <ICProgramErrors key=\"errors\" errors={this.state.errors.filter((e) => e[\"type\"] === \"error\")} errorType=\"error\" errorTitle=\"Errors\" />\r\n                  <ICProgramErrors key=\"warnings\" errors={this.state.errors.filter((e) => e[\"type\"] !== \"error\")} errorType=\"warning\" errorTitle=\"Warnings\" />\r\n                </div>\r\n                </Panel.Body>\r\n                <Panel.Footer>             \r\n                  <Row>\r\n                    <Col md={5}>\r\n                      <h5>Copy to Clipboard</h5>\r\n                      <ButtonToolbar>                  \r\n                        <ButtonGroup>\r\n                          <CopyToClipboard text={this.state.program}>\r\n                            <Button><FontAwesomeIcon icon=\"file\" /> Plain</Button>\r\n                          </CopyToClipboard>\r\n                          <CopyToClipboard text={this.formatCodeForDiscord()}>\r\n                            <Button><FontAwesomeIcon icon={[\"fab\", \"discord\"]} /> Discord</Button>\r\n                          </CopyToClipboard>\r\n                          <CopyToClipboard text={this.formatCodeForReddit()}>\r\n                            <Button><FontAwesomeIcon icon={[\"fab\", \"reddit\"]} /> reddit</Button>\r\n                          </CopyToClipboard>\r\n                        </ButtonGroup>\r\n                      </ButtonToolbar>                     \r\n                    </Col>\r\n                    <Col md={7}>\r\n                      <h5>Share Program</h5>\r\n                      <ICPermalinkGenerator currentHash={this.state.currentHash} />\r\n                    </Col>\r\n                  </Row>\r\n                </Panel.Footer>             \r\n            </Panel>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Panel>\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"gamepad\" /> Control</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <ButtonToolbar>\r\n                  <Button className={inactive} onClick={this.runSingle} ><FontAwesomeIcon icon=\"step-forward\" /> Step</Button>\r\n                  <Button className={inactive} onClick={this.run} ><FontAwesomeIcon icon=\"play\" /> Run</Button>\r\n                  <Button className=\"interactive\" onClick={this.restart} ><FontAwesomeIcon icon=\"redo\" /> Reset IC</Button>\r\n                  <Button className={\"interactive\" + (this.state.runAfterRegisterChange ? \"\" : \" inactive\") } onClick={this.toggleRunAfterRegisterChange} ><FontAwesomeIcon icon=\"eye\" /> Watch Registers</Button>                               \r\n                  <Button className={\"interactive\" + (this.state.runWithErrors ? \"\" : \" inactive\") } onClick={this.toggleRunWithErrors} ><FontAwesomeIcon icon=\"bug\" /> Run With Errors</Button>                               \r\n                </ButtonToolbar>\r\n              </Panel.Body>\r\n            </Panel>\r\n            <Panel bsStyle={this.state.lastStepState === \"HALT_AND_CATCH_FIRE\" ? \"danger\" : \"default\"}>\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"list-ul\" /> Status</Panel.Title>\r\n              </Panel.Heading>\r\n              <Table>\r\n                <tbody>\r\n                  <tr>\r\n                    <th>Program Counter</th><td>{this.state.programCounter}</td>\r\n                  </tr>                    \r\n                  <tr>\r\n                    <th>Last Run Operations</th><td>{this.state.lastRunCount} ({this.state.lastExecuteTime})</td>\r\n                  </tr>                \r\n                  <tr>\r\n                    <th>Last State</th><td>{this.decodeStepState(this.state.lastStepState)}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Panel>            \r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  decodeStepState(step) {\r\n    switch(step) {      \r\n    case \"INVALID_PROGRAM\":\r\n      return \"Program is invalid, solve errors first.\";\r\n    case \"OUT_OF_OPERATIONS\":\r\n      return \"IC has executed 128 operations, execution will resume on next tick.\";\r\n    case \"END_OF_PROGRAM\":\r\n      return \"IC has run out of instructions, this is will result in an IC error.\";\r\n    case \"INVALID_PROGRAM_COUNTER\":\r\n      return \"IC has executed an instruction which has placed the program counter to an invalid location, probably negative.\";\r\n    case \"INVALID_REGISTER_LOCATION\":\r\n      return \"IC has attempted to access a register which does not exist (usually due to indirect register access).\";\r\n    case \"STACK_OVERFLOW\":\r\n      return \"IC has attempted to push data into the stack beyond the limit.\";\r\n    case \"STACK_UNDERFLOW\":\r\n      return \"IC has attempted to pop or peek data from an empty stack.\";\r\n    case \"INTERNAL_ERROR\":\r\n      return \"An error has occured in the simulator, please contact Melair with a permalink.\";\r\n    case \"HALT_AND_CATCH_FIRE\":\r\n      return \"IC has executed the halt and catch fire instruction.\";\r\n    case \"YIELD\":\r\n      return \"IC has yielded control, execution will resume on next tick.\";\r\n    case \"SLEEP\":\r\n      return \"IC is sleeping, execution will resume after sleep has expired (0.5 seconds/tick).\";\r\n    default:\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  step() {\r\n    if(this.canRun()) {\r\n      var result = this.state.ic.step();\r\n      if (result === \"SLEEP\") {\r\n        // eslint-disable-next-line\r\n        this.state.ic._sleepPeriod = 0.5;\r\n      }\r\n\r\n      this.transferICState(this.state.ic.programCounter());\r\n      return result;\r\n    } else {\r\n      if (this.state.ic.programCounter() >= this.state.ic.getInstructionCount()) {\r\n          return \"END_OF_PROGRAM\";\r\n      } else {\r\n          return \"INVALID_PROGRAM\";\r\n      }\r\n    }\r\n  }\r\n\r\n  runSingle() {\r\n    var result = this.step();\r\n    this.setState((prevState, props) => {\r\n      return { lastStepState: result, lastRunCount: 1, lastExecuteTime: (new Date().toUTCString()) };\r\n    });\r\n  }\r\n\r\n  run() {\r\n    var total = 1;\r\n\r\n    var lastResult = this.step();\r\n\r\n    while(!lastResult && total < 128) {\r\n      total++;       \r\n      lastResult = this.step(); \r\n    }\r\n\r\n    this.setState((prevState, props) => {\r\n      return { lastRunCount: total, lastStepState: lastResult, lastExecuteTime: (new Date().toUTCString()) };\r\n    });\r\n\r\n    if (total === 128) {\r\n      this.setState((prevState, props) => {\r\n        return { lastStepState: \"OUT_OF_OPERATIONS\" };\r\n      });\r\n    }\r\n  }\r\n\r\n  restart() {\r\n    this.state.ic.restart();\r\n    this.setState(this.transferICState());\r\n  }\r\n\r\n  clearInternalRegisters() {\r\n    let internalCount = this.state.ic.getInternalRegisters().length;\r\n\r\n    for (var i = 0; i < internalCount; i++) {\r\n      this.state.ic.setInternalRegister(i, 0);\r\n    }\r\n\r\n    this.setState(this.transferICState());\r\n  }\r\n\r\n  setRegister(type, index, value, field) {\r\n    switch (type) {\r\n      case \"io\":\r\n        this.state.ic.setIORegister(index, field, value);\r\n        break;\r\n      case \"internal\":\r\n        this.state.ic.setInternalRegister(index, value);\r\n        break;\r\n      default:\r\n    }\r\n\r\n    this.transferICState();\r\n\r\n    if (this.state.runAfterRegisterChange) {\r\n      this.run();\r\n    }\r\n  }\r\n\r\n  setIOSlot(index, slot, logicType, value) {\r\n    this.state.ic.setIOSlot(index, slot, logicType, value);\r\n    \r\n    this.transferICState();\r\n    \r\n    if (this.state.runAfterRegisterChange) {\r\n      this.run();\r\n    }\r\n  }\r\n\r\n  setIOReagent(index, reagent, reagentMode, value) {\r\n    this.state.ic.setIOReagent(index, reagent, reagentMode, value);\r\n\r\n    this.transferICState();\r\n    \r\n    if (this.state.runAfterRegisterChange) {\r\n      this.run();\r\n    }\r\n  }\r\n\r\n  programChange(text) {\r\n    var filteredText = text.split('').filter((c) => c.charCodeAt(0) < 128).join('');\r\n    this.setState({ program: filteredText });\r\n    this.loadProgram(text);\r\n  }\r\n\r\n  loadProgram(program) {\r\n    let ic = this.state.ic;\r\n    ic.load(program);\r\n    this.setState({ labels: this.parseLabels(program) });\r\n    this.setState({ errors: ic.getProgramErrors() });\r\n    this.setState({ instructionCount: ic.getInstructionCount() });\r\n    this.transferICState();\r\n  }\r\n\r\n  parseLabels(program) {\r\n    let labels = { io: [], internal: [] };\r\n    let lines = program.split(\"\\n\")\r\n\r\n    let jumpLabel = {}\r\n\r\n    lines.forEach((line, i) => {\r\n      var lineParts = line.split(/\\/\\/:|#:/);\r\n\r\n      if (lineParts.length === 1) {\r\n        return;\r\n      }\r\n\r\n      let tokens = lineParts[1].split(\":\");\r\n\r\n      if (tokens.length === 3) {\r\n        if (labels.hasOwnProperty(tokens[0])) {\r\n          let number = Number.parseInt(tokens[1], 10);\r\n          labels[tokens[0]][number] = tokens[2];\r\n        }\r\n      }\r\n\r\n      if (tokens[0] === \"label\") {\r\n        jumpLabel[tokens[1]] = i;\r\n      }\r\n    });\r\n\r\n    return labels;\r\n  }\r\n\r\n  toggleRunAfterRegisterChange(event) {\r\n    this.setState({ runAfterRegisterChange: !this.state.runAfterRegisterChange });\r\n  }\r\n\r\n  toggleRunWithErrors(event) {\r\n    this.setState({ runWithErrors: !this.state.runWithErrors });\r\n    this.state.ic.setIgnoreErrors(!this.state.runWithErrors);\r\n  }\r\n}\r\n\r\nexport default ICSocket;\r\n","import React, { Component } from 'react';\r\nimport { Panel } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faLightbulb, faStepForward, faEye, faPlay } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faLightbulb, faStepForward, faEye, faPlay);\r\n\r\nclass ICInstructions extends Component {\r\n    render() {\r\n        return (<Panel>\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"lightbulb\" /> Instructions</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body>\r\n              <h4>Introduction</h4>\r\n              <p>\r\n                This is a clean room implementation of the Stationeers Programable Chip. It should implement the MIPS instructions set as detailed by <a href=\"https://steamcommunity.com/games/544550/announcements/detail/2903022560766254057\">Heightmare</a>.\r\n              </p>                \r\n              <h4>Writing A Program</h4>\r\n              <p>\r\n                Write the program code in the Program text box, it will be read and parsed automatically. Any errors will appear below the text box and marked along side your code, once corrected the program can be run.\r\n              </p>\r\n              <h4>Running A Program</h4>\r\n              <p>\r\n                Pressing <FontAwesomeIcon icon=\"step-forward\" /> will step the program through one instruction at a time. Pressing <FontAwesomeIcon icon=\"play\" /> will run it through. If you use step then <FontAwesomeIcon icon=\"redo\" /> will reset the program to the first instruction, wipe registers and stack.\r\n              </p>                                \r\n              <p>\r\n                <FontAwesomeIcon icon=\"eye\" /> can be toggled, if solid then when a register at the top is changed the program will be automatically rerun.\r\n              </p>\r\n              <p>\r\n                <FontAwesomeIcon icon=\"bug\" /> can be toggled, if solid then the simulator will allow you to run an invalid program. When it encounters an error, the instruction will be ignored and treated as a noop.\r\n              </p>\r\n              <h4>Jump Tags</h4>\r\n              <p>\r\n                To assist the creation of larger and more complex programs, the simulator can handle jump tags as supported by the IC. This means where you would put a jump destination you may put a tag.\r\n              </p>\r\n              <p>\r\n                For example:                  \r\n              </p>\r\n              <pre>{`start:\r\nmove o 1\r\nyield\r\nj start`}</pre>\r\n              <h4>Set/Unset Devices</h4>\r\n              <p>\r\n                You can toggle if the IC would see the emulated device as connected by toggling with the <FontAwesomeIcon icon=\"link\" /> icon.\r\n              </p>\r\n              <h4>Labelling Devices</h4>\r\n              <p>\r\n                To label a device (in simulator and in game), use the follow instruction:\r\n              </p>\r\n              <pre>{`alias GasSensor d1`}</pre>\r\n              <p><strong>Note</strong> Stationeering.com's labels will no longer work for devices, use the <code>alias</code> instruction.</p>\r\n              <h4>Labelling Registers</h4>\r\n              <p>\r\n                To label a register, use the following instruction:\r\n              </p>\r\n              <p>\r\n                <pre>{`alias CurrentPressure r1`}</pre>\r\n              </p>\r\n              <p>You will then be able to refer to the label name rather than the register in code.</p>\r\n              <p><strong>Note</strong> The aliases will not appear on the registers until the instruction has been executed.</p>\r\n              <p>\r\n                You can also still use Stationeering.com's legacy method of labeling registers.\r\n              </p>\r\n              <pre>{`#:internal:0:If it's safe?`}</pre>\r\n              <p><strong>Note</strong> These comments will still count as line numbers for the interpreter, so addresses for jumps needs to be adjusted.</p>\r\n            </Panel.Body>\r\n          </Panel>);\r\n    }\r\n}\r\n\r\nexport default ICInstructions;","import React, { Component } from 'react';\r\nimport { Panel, Table } from 'react-bootstrap';\r\n\r\nimport IC from 'stationeers-ic';\r\nimport axios from 'axios';\r\n\r\nimport sanitize from 'sanitize-html';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './ICInstructionSet.css';\r\n\r\nlibrary.add(faBook);\r\n\r\nclass ICInstructionSet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let ic = new IC();\r\n    let instructions = ic.getInstructions();\r\n    let instructionKeys = Object.keys(instructions);\r\n\r\n    let instructionsByCategory = instructionKeys.reduce((acc, opcode) => {\r\n      let category = instructions[opcode].category;\r\n\r\n      if (!Object.keys(acc).includes(category)) {\r\n        acc[category] = {};\r\n      }\r\n\r\n      acc[category][opcode] = instructions[opcode].fields;\r\n\r\n      return acc;\r\n    }, {});\r\n\r\n    this.state = { instructions: instructionKeys, instructionsByCategory, extractedInstructions: { data: null, message: \"Please wait loading instruction descriptions.\" } };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var instructionSet = this;\r\n\r\n    axios({ url: 'https://data.stationeering.com/logic/beta/instructions.json', method: 'get', responseType: 'json' })\r\n        .then(function (response) {\r\n            instructionSet.setState({ extractedInstructions: { data: response.data, message: null } })\r\n        })\r\n        .catch(function (error) {\r\n            instructionSet.setState({ extractedInstructions: { message: \"Failed to load instruction descriptions! \" + error } })\r\n        });\r\n  }\r\n\r\n  render() {\r\n    let categories = Object.keys(this.state.instructionsByCategory).map((category) => <ICInstructionSetCategory key={category} category={category} instructions={this.state.instructionsByCategory[category]} extractedInstructions={this.state.extractedInstructions.data || {}} />)\r\n\r\n    return (<Panel>\r\n      <Panel.Heading>\r\n        <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"book\" /> Stationeers Instruction Set</Panel.Title>\r\n      </Panel.Heading>\r\n      <Panel.Body>\r\n        <p>\r\n          Comments are made by using the <code>#</code> symbol, either at the start of a line or after an instruction.\r\n        </p>\r\n        {categories}\r\n      </Panel.Body>\r\n    </Panel>);\r\n  }\r\n}\r\n\r\nconst SECTIONS = {\r\n  \"device\": \"Device IO\",\r\n  \"flow\": \"Flow Control, Branches and Jumps\",\r\n  \"select\": \"Variable Selection\",\r\n  \"math\": \"Mathematical Operations\",\r\n  \"logic\": \"Logic\",\r\n  \"stack\": \"Stack\",\r\n  \"misc\": \"Misc\"\r\n};\r\n\r\nclass ICInstructionSetCategory extends Component {\r\n  render() {\r\n    let instructions = Object.keys(this.props.instructions).sort().map((instruction) => {\r\n      let data = this.props.extractedInstructions[instruction] || { description: \"\", example: \"\" };\r\n\r\n      return <ICInstruction key={instruction} opcode={instruction} fields={this.props.instructions[instruction]} description={data.description} example={data.example} />;\r\n    });\r\n\r\n    let categoryName = SECTIONS[this.props.category] || this.props.category;\r\n\r\n    return (<div>\r\n      <h4>{categoryName}</h4>\r\n      <Table condensed>\r\n        <thead>\r\n          <tr>\r\n            <th>Instruction</th>\r\n            <th colSpan={4}>Fields</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {instructions}\r\n        </tbody>\r\n      </Table>\r\n    </div>)\r\n  }\r\n}\r\n\r\nclass ICInstruction extends Component {\r\n  render() {\r\n    let fields = this.props.example.split(\" \").splice(1).map((field, i) => <ICField field={field} key={i} />);\r\n\r\n    for (let i = fields.length; i <= 3; i++) {\r\n      fields.push(<td className=\"field\">&nbsp;</td>)\r\n    }\r\n\r\n    return (<React.Fragment>\r\n        <tr>\r\n          <td><code>{this.props.opcode}</code></td>\r\n          {fields}\r\n        </tr>\r\n        <tr>\r\n          <td colSpan={5}>» {this.props.description}</td>\r\n        </tr> \r\n      </React.Fragment>)\r\n  }\r\n}\r\n\r\nclass ICField extends Component {\r\n  render() {\r\n    return <td className=\"field\"><code>{sanitize(this.props.field)}</code></td>;\r\n  }\r\n}\r\n\r\nexport default ICInstructionSet;","import React, { Component } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport ICSocket from './ICSocket';\r\nimport ICInstructions from './ICInstructions';\r\nimport ICInstructionSet from './ICInstructionSet';\r\n\r\nclass ICSimulator extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ICSimulator\">\r\n          <MetaTags>\r\n            <meta name=\"description\" content=\"Stationeering provides a simulation of the IC10 chip inside Stationeers. IDE with error checking, full visibility of stack and registers.\" />\r\n          </MetaTags>\r\n        <ICSocket />\r\n        <Row>\r\n          <Col md={5}>\r\n            <ICInstructions />\r\n          </Col>\r\n          <Col md={7}>\r\n            <ICInstructionSet />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ICSimulator;","import React, { Component } from 'react';\r\nimport { Row, Col, Panel } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faSpinner);\r\n\r\nclass ICPermalink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { link: this.props.match.params.permalink, process: { status: \"loading\", statusCode: undefined, error: undefined, state: undefined } };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var container = this;\r\n\r\n    axios({ url: 'https://api.stationeering.com/live/permalink/' + this.state.link, method: 'get', responseType: 'json' })\r\n      .then(function (response) {\r\n        if (!response.data.state) {\r\n          container.setState({ process: { status: \"failed\", error: \"No state included in response from API!\" }});\r\n        } else {\r\n          container.setState({ process: { status: \"success\", state: response.data.state }});\r\n        }\r\n      })\r\n      .catch(function (error) {                \r\n        if (error.response) {\r\n          if (error.response.status === 404) {\r\n            container.setState({ process: { status: \"failed\", error: \"Could not find permalinked IC!\", statusCode: error.response.status }});\r\n          } else {\r\n            container.setState({ process: { status: \"failed\", error: \"Unexpected error, failed to load from API.\", statusCode: error.response.status }});\r\n          }     \r\n        } else {\r\n          container.setState({ process: { status: \"failed\", error: error.message }});\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    var output;\r\n    \r\n    switch(this.state.process.status) {\r\n    case \"loading\":\r\n      output = <Loading />;\r\n      break;\r\n    case \"failed\":\r\n      output = <FailedLoading error={this.state.process.error} statusCode={this.state.process.statusCode} />;\r\n      break;\r\n    case \"success\":\r\n      output = <Redirect to={\"/tools/ic#\" + this.state.process.state} />;\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n    \r\n    return output;\r\n  }\r\n}\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (<Row>\r\n      <Col md={12}>\r\n        <Panel bsStyle=\"success\">\r\n          <Panel.Heading>\r\n            <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"spinner\" pulse /> Loading, please wait...</Panel.Title>            \r\n          </Panel.Heading>\r\n          <Panel.Body>\r\n            Finding your permalink now...\r\n          </Panel.Body>\r\n        </Panel>\r\n      </Col>\r\n    </Row>);\r\n  }\r\n}\r\n\r\nclass FailedLoading extends Component {\r\n  render() {\r\n    var notFound = this.props.statusCode === 404;\r\n    \r\n    return (<Row>\r\n      <Col md={12}>\r\n        <Panel bsStyle={notFound ? \"warning\" : \"danger\"}>\r\n          <Panel.Heading>\r\n            <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"code-branch\" /> Failed to load permalink!</Panel.Title>            \r\n          </Panel.Heading>\r\n          <Panel.Body>\r\n            {this.props.error} ({this.props.statusCode})\r\n          </Panel.Body>\r\n        </Panel>\r\n      </Col>\r\n    </Row>);\r\n  }\r\n}\r\n\r\nexport default ICPermalink;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Panel, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass UpdateManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.notify = this.notify.bind(this);\r\n        this.handleReload = this.handleReload.bind(this);\r\n        this.handleDismiss = this.handleDismiss.bind(this);\r\n\r\n        this.state = { updateAvailable: false, show: true };\r\n\r\n        this.props.updateProxy.subscribe(this.notify);\r\n    }\r\n\r\n    notify() {\r\n        this.setState({ updateAvailable: true });\r\n    }\r\n\r\n    handleDismiss() {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleReload() {\r\n        window.location.reload(true);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.updateAvailable && this.state.show) {\r\n            return (\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Panel bsStyle=\"info\">\r\n                            <Panel.Heading>\r\n                                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"spinner\" spin /> Website Updated</Panel.Title>                                \r\n                            </Panel.Heading>\r\n                            <Panel.Body>\r\n                                <div>\r\n                                    This website has been updated and you can get a new version by reloading the page. You might not see an immediate difference, but something will have been changed behind the scenes that's important.\r\n                                </div>\r\n                            </Panel.Body>\r\n                            <Panel.Footer>\r\n                                <Button bsStyle=\"success\" onClick={this.handleReload}>Reload Site</Button>\r\n                                <span> or </span>\r\n                                <Button bsStyle=\"danger\" onClick={this.handleDismiss}>Hide Alert</Button>\r\n                            </Panel.Footer>\r\n                        </Panel>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateManager;","import React, { Component } from 'react';\r\nimport { Row, Col, Panel, Alert } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faDatabase, faEnvelope, faFileExport, faListUl } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Data.css';\r\n\r\nlibrary.add(faDatabase, faListUl, faEnvelope, faFileExport);\r\n\r\nclass Data extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Panel bsStyle=\"success\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"database\" /> Introduction</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <p>\r\n                  Stationeering is a continuation of Melair's \"Stationeers Version History\" site, we regularily poll Steam to find out the latest version history and data from Stationeers. This is actually a bit of a pain to do, so given we are already doing it, we want to open that data up for anyone to use.\r\n                </p>\r\n                <p>\r\n                  As we say, we're happy for you to use the data we describe below. However, please be kind to us, follow any guidance and we'll be fine.\r\n                </p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Panel bsStyle=\"danger\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"list-ul\" /> Rules</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <h4>Polling</h4>\r\n                <ul>\r\n                  <li>Poll only <strong>once</strong> per hour per file - we only update once per hour. Best time is around twenty past the hour.</li>\r\n                  <li>Ideally, if you can, use <a href=\"https://en.wikipedia.org/wiki/HTTP_ETag#Typical_usage\">ETags and perform conditional web requests</a>.</li>\r\n                </ul>\r\n                <h4>Commercial Use</h4>\r\n                <ul>\r\n                  <li>Do not use these feeds for commercial purposes without speaking to Melair, permission will be granted if you're willing to cover the cost of your access - likely less than $1/month.</li>\r\n                </ul>\r\n                <h4>Hot Linking, Single Page Applications or Pass Through</h4>\r\n                <ul>\r\n                  <li>Do not link to a data feed directly, link to this page.</li>\r\n                  <li>Do not use the feeds in single page applications, or client rendered sites - CORS will prevent you anyway.</li>\r\n                  <li>Do not use an proxy to bypass CORS, or simply proxy requests to these feeds.</li>\r\n                </ul>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Panel bsStyle=\"info\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"envelope\" /> WebHook: Versions</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <h4>About</h4>\r\n                <p>\r\n                  Rather than polling our data set, we have the ability to make a HTTP request against your web service. This means you will get the update as soon as we know about it.\r\n                </p>\r\n                <p>\r\n                  Contact Melair to arrange the set up of a webhook.\r\n                </p>\r\n                <h4>Set Up</h4>\r\n                <p>\r\n                  We use Amazon Web Services to provide this website, once you have given us your notification URL we will set up a subscription to an SNS topic. During which it will make a HTTP POST to your end point. It will contain a JSON blob.\r\n                </p>\r\n                <pre>\r\n                {`{\r\n  \"Type\" : \"SubscriptionConfirmation\",\r\n  \"SubscribeURL\" : \"https://sns.us-west-2.amazonaws.com/?Action=ConfirmSubscription&TopicArn=arn:aws:sns:us-west-2:123456789012:MyTopic&Token=2336412f37fb687f5d51e6e241d09c805a5a57b30d712f794cc5f6a988666d92768dd60a747ba6f3beb71854e285d6ad02428b09ceece29417f1f02d609c582afbacc99c583a916b9981dd2728f4ae6fdb82efd087cc3b7849e05798d2d2785c03b0879594eeac82c01f235d0e717736\"\r\n}`}\r\n                </pre>\r\n                <p>\r\n                  Your endpoint should decode this message as JSON, check the <code>Type</code> field, if it is <code>SubscriptionConfirmation</code>, you should then make a HTTP GET request to the value included in the <code>SubscribeURL</code>.\r\n                </p>\r\n                <p>\r\n                  If we rearchitect our internal systems we may need to change SNS topic, as such <strong>we recommend you leave the code in to power this</strong>. This means will can make the change without breaking you.\r\n                </p>\r\n                <h4>Notifications</h4>\r\n                <p>\r\n                  Once you have confirmed the subscription, you will receive POSTs when there are new Stationeers version updates. These messages are also JSON and will have a type of <code>Notification</code>. You should then proceed to extract the <code>Message</code> field and then once again parse that field as JSON.\r\n                </p>\r\n                <pre>\r\n                {`{\r\n  \"Type\": \"Notification\",\r\n  \"Message\": \"{ \\\\\"field\\\\\": \\\\\"value\\\\\" }\"\r\n}`}\r\n                </pre>\r\n                <p>\r\n                </p>\r\n                <h4>Message</h4>\r\n                <p>\r\n                  Once you have extracted and parsed the <code>Message</code>, you will have an object that you can now process.\r\n                </p>\r\n                <pre>\r\n                {`{\r\n  \"operation\": \"create\"|\"update\", // If this is a new version, or if we're updating an old version (beta -> public).\r\n  \"type\": \"version\", // The object type being updated, you may wish to filter on this to be sure, or you can duck type by checking for the version field.\r\n  \"version\": {\r\n    \"version_number\": \"100156407373\", // An always increasing numerical representation of the version number, don't decode this, but it is safe to assume a higher number than one you already have is a new version.\r\n    \"version\": \"0.1.1564.7373\", // Always present.\r\n    \"build_id\": \"2985053\", // Steam build ID, may be missing.\r\n    \"built_date\": \"1532755962000\", // Steam build date, may be missing. Number of milliseconds since unix epoch.\r\n    \"beta_date\": \"1532755962000\", // Date the version appeared on the beta branch. Number of milliseconds since unix epoch.\r\n    \"public_date\": \"1532757857000\", // Date the version appeared on the public branch, missing if not yet on public. Number of milliseconds since unix epoch.\r\n    \"updated_date\": \"1532758092378\", // Date the last time Stationeering updated this record. Number of milliseconds since unix epoch.\r\n    \"server_build_id\": \"2985053\", // Dedicated server Steam build ID, may be missing.\r\n    \"server_beta_date\": \"1532755962000\", // Date the dedicated server version appeared on the beta branch. Number of milliseconds since unix epoch.\r\n    \"server_public_date\": \"1532757857000\", // Date the version dedicated server appeared on the public branch, missing if not yet on public. Number of milliseconds since unix epoch.    \r\n    \"notes\": [\r\n      \"A change log.\" // One entry per change log line for this version.\r\n    ]\r\n  }\r\n}`}\r\n                </pre>\r\n                <p>\r\n                  We may also regularily send a message with a <code>operation</code> of <code>ping</code>. It will contain no version, you can use this to verify we are still sending data to you, or you may ignore it.\r\n                </p>\r\n                <pre>\r\n                {`{\r\n  \"operation\" : \"ping\"\r\n}`}\r\n                </pre>                \r\n                <h4>More Information about SNS</h4>\r\n                <p>\r\n                  You can refer to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SendMessageToHttp.html#SendMessageToHttp.prepare\">Amazon's documentation</a> on notifications. If you are also in Amazon Web Service, we can also subscribe your own SQS queue instead. Again, contact Melair.\r\n                </p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <Panel bsStyle=\"info\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"file-export\" /> Data: Versions</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>                \r\n                <Alert bsStyle=\"danger\">\r\n                  <strong>DO NOT</strong> poll this file more than once an hour, see \"Update Schedule\" above. Consider using the \"WebHook\" above!\r\n                </Alert>\r\n                <p>\r\n                  We make all recent changes available in a JSON formatted file, this will contain <strong>all</strong> unreleased changes on the beta branch and then changes on the public branch until there are at least <strong>15</strong> total versions.\r\n                </p>\r\n                <pre>\r\n                  https://data.stationeering.com/versions/recent.json\r\n                </pre>\r\n                <p>\r\n                  The JSON file structure is as follows:\r\n                </p>\r\n                <pre>\r\n                {`[\r\n  {\r\n    \"version_number\": \"100156407373\", // An always increasing numerical representation of the version number, don't decode this, but it is safe to assume a higher number is newer.\r\n    \"version\": \"0.1.1564.7373\", // Always present.\r\n    \"build_id\": \"2985053\", // Steam build ID, may be missing.\r\n    \"built_date\": \"1532755962000\", // Steam build date, may be missing. Number of milliseconds since unix epoch.\r\n    \"beta_date\": \"1532755962000\", // Date the version appeared on the beta branch. Number of milliseconds since unix epoch.\r\n    \"public_date\": \"1532757857000\", // Date the version appeared on the public branch, missing if not yet on public. Number of milliseconds since unix epoch.\r\n    \"updated_date\": \"1532758092378\", // Date the last time Stationeering updated this record. Number of milliseconds since unix epoch.\r\n    \"server_build_id\": \"2985053\", // Dedicated server Steam build ID, may be missing.\r\n    \"server_beta_date\": \"1532755962000\", // Date the dedicated server version appeared on the beta branch. Number of milliseconds since unix epoch.\r\n    \"server_public_date\": \"1532757857000\", // Date the version dedicated server appeared on the public branch, missing if not yet on public. Number of milliseconds since unix epoch.    \r\n    \"notes\": [\r\n      \"A change log.\" // One entry per change log line for this version.\r\n    ]\r\n  }\r\n]`}\r\n                </pre>\r\n                <p>\r\n                  The array will contain the most recent version first.\r\n                </p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Panel bsStyle=\"info\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"file-export\" /> Data: Scenarios</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>                \r\n                <Alert bsStyle=\"danger\">\r\n                  <strong>DO NOT</strong> poll this file more than once an hour, see \"Update Schedule\" above.\r\n                </Alert>\r\n                <p>\r\n                  We parse the scenarios which players can start in, including information about gravity, day length and atmosphere.\r\n                </p>\r\n                <pre>\r\n{`https://data.stationeering.com/scenarios/beta.json\r\nhttps://data.stationeering.com/scenarios/public.json`}\r\n                </pre>\r\n                <p>\r\n                  The JSON file structure is as follows:\r\n                </p>\r\n                <pre>\r\n                {`[\r\n  {\r\n    \"name\": \"Mars\", // Name of scenario.\r\n    \"description\": \"NewWorldMoonShortDesc\", // Localisation key found in language file. \r\n    \"game_mode\": \"Survival\", // Gamemode the player is in, survival or creative.\r\n    \"planet\": { // Information about the planetary body.\r\n      \"gravity\": -3.7, // Acceleration of a player, meters per second per second. Negative is towards the ground.\r\n      \"day_length\": 0.91 // Length of the delay relative to that of the Moon scenario (20 minutes).\r\n    },\r\n    \"atmosphere\": { // Atomosphere information\r\n      \"temperature\": { // Temperature information\r\n        \"min\": 197.15, // Minimum temperature in Kelvin as listed in key frames.\r\n        \"max\": 293.15, // Maximum temperature in Kelvin as listed in key frames.\r\n        \"avg\": 264.91999999999996 // Average temperature in Kelvin of key frames, this is currently not very useful.\r\n      },\r\n      \"composition\": [  // What the atmosphere is made of.\r\n        {\r\n          \"type\": \"CarbonDioxide\", // Gas identifier.\r\n          \"quantity\": 8.656 // Number of moles in one large grid cube.\r\n        },\r\n        {\r\n          \"type\": \"Nitrogen\",\r\n          \"quantity\": 0.27\r\n        },\r\n        {\r\n          \"type\": \"Oxygen\",\r\n          \"quantity\": 0.131\r\n        },\r\n        {\r\n          \"type\": \"Pollutant\",\r\n          \"quantity\": 0.05839586\r\n        }\r\n      ]\r\n    }\r\n  }\r\n]`}\r\n                </pre>\r\n                <p>\r\n                  It is possible to work out the pressure of the atmosphere with the information presented above using the ideal gas law.\r\n                </p>\r\n                <pre>\r\n                  {`General:\r\npressure = ((moles * gas constant * temperature) / volume)                                    \r\n\r\nFor Stationeers:\r\npressure in kPa = ((moles * 8.3144 * temperature) / 8000)                                    \r\n\r\nNotes:\r\n1. Gas constant of 8.3144 is taken from Stationeers source and derivation is beyond the scope of this document.\r\n2. Volume of 8000 is 20³, a Stationeers large grid is a 2m cube. Stationeers seems an order of magnitude off, but this works just fine.`}\r\n                </pre>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Panel bsStyle=\"info\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"file-export\" /> Data: Recipes</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>                \r\n                <Alert bsStyle=\"danger\">\r\n                  <strong>DO NOT</strong> poll this file more than once an hour, see \"Update Schedule\" above.\r\n                </Alert>\r\n                <p>\r\n                  We parse all recipes and present them in a list.\r\n                </p>\r\n                <pre>\r\n{`https://data.stationeering.com/recipes/beta.json\r\nhttps://data.stationeering.com/recipes/public.json`}\r\n                </pre>\r\n                <p>\r\n                  The JSON file structure is as follows:\r\n                </p>\r\n                <pre>\r\n                {`{\r\n  \"branch\": \"public\", // Branch the file is regarding.\r\n  \"updated_time\": \"1532758424039\", // Last time the file was updated by our backend.\r\n  \"recipes\": [ // List of Recipes.\r\n    {\r\n      \"item\": \"ApplianceChemistryStation\", // Item that is made by the recipe.\r\n      \"manufactory\": \"FabricatorRecipes\", // Which kind of recipe it is.\r\n      \"ingredients\": { // Ingredients\r\n        \"Gold\": \"1\", // The amount of each material, see the languages file to find out the units for each of these.\r\n        \"Time\": \"90\",\r\n        \"Iron\": \"50\",\r\n        \"Energy\": \"500\",\r\n        \"Copper\": \"2\"\r\n      }\r\n    }\r\n  ]\r\n}`}\r\n                </pre>\r\n                <p>\r\n                  At current furnace temperature and pressure requirements are not represented in the data.\r\n                </p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Panel bsStyle=\"info\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"file-export\" /> Data: Languages</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>                \r\n                <Alert bsStyle=\"danger\">\r\n                  <strong>DO NOT</strong> poll this file more than once an hour, see \"Update Schedule\" above.\r\n                </Alert>\r\n                <p>\r\n                  We parse all language files and present them in a JSON structured object.\r\n                </p>\r\n                <pre>\r\n{`https://data.stationeering.com/languages/<code>/<branch>.json\r\n\r\nFor example:\r\nhttps://data.stationeering.com/languages/en/beta.json\r\nhttps://data.stationeering.com/languages/ru/public.json\r\n`}\r\n                </pre>\r\n                <p>\r\n                  The JSON file structure is as follows:\r\n                </p>\r\n                <pre>\r\n                {`{\r\n  \"code\": \"en\", // ISO code for language.\r\n  \"name\": \"English\", // The name of the langage *in English*.\r\n  \"sections\": { // Different sections of the language file.\r\n    \"Reagents\": { // Reagents, raw components used by manufactories.\r\n      \"Flour\": { // Name of reagent.\r\n        \"name\": \"Flour\", // Name in language.\r\n        \"unit\": \"g\" // Unit in language, if empty it's a countable word, as approrpiate for that language.\r\n      }\r\n    },\r\n    \"Gases\": { // Gases used by atmosphereics, straight mapping.\r\n      \"CarbonDioxide\": \"Carbon Dioxide\"\r\n    },\r\n    \"Things\": { // Items, Structures, Kits, etc. Straight mapping.\r\n      \"ApplianceMicrowave\": \"Microwave\"\r\n    },\r\n    \"Mineables\": { // Mineable material ores. Straight mapping.\r\n      \"Iron\": \"Iron\"\r\n    }\r\n  }\r\n}`}\r\n                </pre>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Data;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Panel } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faQuestionCircle, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Discord.css';\r\n\r\nlibrary.add(faQuestionCircle, faExclamationTriangle);\r\n\r\nclass Discord extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={9}>\r\n            <Panel bsStyle=\"success\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon={[\"fab\", \"discord\"]} /> Stationeering Discord Bot</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <p>\r\n                  We've worked with a few different people to help them get our version feeds into their Discord servers, it was a more common request than we had anticipated.\r\n                </p>\r\n                <p>\r\n                  So it's time for us to provide that service.\r\n                </p>\r\n              </Panel.Body>\r\n            </Panel>\r\n\r\n            <Panel>\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"list-ul\" /> Instructions</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <p>You must have administrative permissions on your server to request our bot joins your server, and to configure it.</p>\r\n                <ol>\r\n                  <li>Request the bot joins your server. <a href=\"https://discordapp.com/oauth2/authorize?client_id=481360973215694850&permissions=3072&scope=bot\">Summon Stationeering Bot!</a></li>\r\n                  <li>Ensure that the bot role has access to read and send messages in the channel you want the Version messages to appear in.</li>\r\n                  <li>Type <code>@Stationeering set_channel VERSIONS</code> in the channel.</li>\r\n                  <li>If it responds, you're all done. Any problems, talk to us!</li>\r\n                </ol>\r\n              </Panel.Body>\r\n            </Panel>\r\n\r\n            <Panel bsStyle=\"warning\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"exclamation-triangle\" /> Notes</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <p>\r\n                  This is the first version of the bot, we will be adding more functionality in the future. However, don't worry, you'll have to enable each new features as it comes. We wont push new features on your server.\r\n                </p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n          <Col md={3}>\r\n          <Panel bsStyle=\"info\">\r\n              <Panel.Heading>\r\n                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"question-circle\" /> Questions</Panel.Title>\r\n              </Panel.Heading>\r\n              <Panel.Body>\r\n                <p>\r\n                  If you've got questions, come join us in Stationeerings Discord.                \r\n                </p>\r\n                <p>\r\n                  <a href=\"https://discord.gg/5WynpfX\">Stationeering Discord</a>\r\n                </p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Discord;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Panel, Badge, Label, ListGroup, ListGroupItem, Nav, NavItem, Alert } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport Timestamp from 'react-timestamp';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCodeBranch, faWrench, faFlask, faUsers, faRss, faFileCode } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './VersionList.css';\r\nlibrary.add(faCodeBranch, faWrench, faFlask, faUsers, faRss, faFileCode);\r\n\r\nclass VersionList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={10}>\r\n                        <h3>Versions</h3>\r\n                        <Panel bsStyle=\"warning\">\r\n                            <Panel.Heading>\r\n                                <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon={[\"fab\", \"discord\"]} /> Version Announcements in <strong>your</strong> Discord!</Panel.Title>\r\n                            </Panel.Heading>\r\n                            <Panel.Body>\r\n                                    Do you want version update information in your Discord? Well now you can with the Stationeering bot! <NavLink className='pull-right' to='/tools/discord'>Try the bot now!</NavLink>\r\n                            </Panel.Body>\r\n                        </Panel>\r\n                        <p>\r\n                            These are the recent changes to Stationeers, extracted from the game once an hour.\r\n                        </p>\r\n                        <Nav bsStyle=\"pills\" activeKey={this.props.match.params.section}>\r\n                            <NavItem eventKey=\"recent\" componentClass={NavLink} to=\"/versions/recent\" href=\"/versions/recent\">\r\n                                Recent Changes (Release)\r\n                            </NavItem>\r\n                            <NavItem eventKey=\"beta\" componentClass={NavLink} to=\"/versions/beta\" href=\"/versions/beta\">\r\n                                Recent Changes (Beta)\r\n                            </NavItem>\r\n                            <NavItem eventKey=\"all\" componentClass={NavLink} to=\"/versions/all\" href=\"/versions/all\">\r\n                                All Changes\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <p />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={10}>\r\n                        <VersionFilter view={this.props.match.params.section} />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                    <Panel bsStyle=\"info\">\r\n                        <Panel.Heading>\r\n                            <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"rss\" /> ATOM Feeds</Panel.Title>\r\n                        </Panel.Heading>\r\n                        <ListGroup>\r\n                            <ListGroupItem><a href=\"https://data.stationeering.com/versions/public.atom\">Public Branch</a></ListGroupItem>\r\n                            <ListGroupItem><a href=\"https://data.stationeering.com/versions/beta.atom\">Beta Branch</a></ListGroupItem>\r\n                        </ListGroup>\r\n                    </Panel>\r\n                    <Panel bsStyle=\"info\">\r\n                        <Panel.Heading>\r\n                            <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"file-code\" /> JSON Feed</Panel.Title>\r\n                        </Panel.Heading>\r\n                        <ListGroup>\r\n                            <ListGroupItem><NavLink to='/tools/data'>Recent Versions</NavLink></ListGroupItem>\r\n                        </ListGroup>\r\n                    </Panel>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass VersionFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var earliestDate = Date.now() - (14*24*60*60*1000); \r\n\r\n        this.state = { versions: { data: [], message: \"Please wait loading version data!\", nextFile: \"head.json\", flattenedVersions: [] }, earliestDate, network: false };\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.checkDataHasEnough();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    checkDataHasEnough() {\r\n        var allBetaDates = this.state.versions.flattenedVersions.map((version) => version.beta_date);\r\n        var oldestDate = Math.min(...allBetaDates);\r\n\r\n        var targetDate = (this.props.view === \"all\" ? -2 : this.state.earliestDate);\r\n\r\n        if (oldestDate > targetDate) {            \r\n            return !this.fetchNextPage();\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.view !== prevProps.view && !this.state.network) {\r\n            this.checkDataHasEnough();\r\n        }\r\n    }\r\n\r\n    fetchNextPage() {\r\n        if (!this.state.versions.nextFile || !this.mounted) {\r\n            return false;\r\n        }\r\n\r\n        var recent = this;\r\n\r\n        if (!this.state.network) {\r\n            this.setState({ network: true });\r\n        }\r\n\r\n        axios({ url: 'https://data.stationeering.com/versions/paginated/' + this.state.versions.nextFile, method: 'get', responseType: 'json' })\r\n            .then(function (response) {\r\n                var newData = recent.state.versions.data.slice(0);\r\n                newData.push(response.data);\r\n                \r\n                var justVersions = recent.state.versions.data.map((versionDataWithHeader) => versionDataWithHeader.versions);\r\n                var flatVersions = [].concat(...justVersions);\r\n\r\n                var nextFile = response.data.previous;\r\n\r\n                recent.setState({ versions: { data: newData, flattenedVersions: flatVersions, message: null, nextFile } })\r\n                \r\n                if (recent.checkDataHasEnough()) {\r\n                    recent.setState({network: false});\r\n                }\r\n            })\r\n            .catch(function (error) {                \r\n                recent.setState({ versions: { message: \"Failed to load version list! \" + error }, network: false })\r\n            });\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        var messages = [];\r\n        var results = this.state.versions.flattenedVersions.filter(version => this.filterVersion(version)).map(version => <Version key={version.version} version={version} />);\r\n\r\n        if (this.props.view === \"all\") {\r\n            messages.push({message: \"This page may be slow on old or mobile devices.\", style: \"danger\"});\r\n        }\r\n\r\n        if (this.state.versions.message !== null) {\r\n            messages.push({message: this.state.versions.message, style: \"info\"});\r\n        }\r\n\r\n        if (this.state.network) {\r\n            messages.push({message: \"Currently loading from server... (\" + this.state.versions.nextFile + \")\", style: \"info\"});\r\n        } else {\r\n            if (results.length === 0) {\r\n                switch (this.props.view) {\r\n                    case \"recent\":\r\n                        messages.push({message: \"There are no recent changes to the game.\", style: \"success\"});\r\n                        break;\r\n                    case \"beta\":\r\n                        messages.push({message: \"There are currently no changes on the beta branch which are not present on release.\", style: \"success\"});\r\n                        break;\r\n                    default:\r\n                        messages.push({message: \"Could not find any changes, please try again later.\", style: \"warning\"});\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        var alerts = messages.map((msg,i) => <Alert key={i} bsStyle={msg.style}>{msg.message}</Alert>);\r\n\r\n        return <div>{[...alerts, ...results]}</div>;\r\n    }\r\n\r\n    filterVersion(version) {\r\n        switch (this.props.view) {\r\n            case \"all\":\r\n                return true;\r\n            case \"recent\":\r\n                return (version.public_date && Number.parseInt(version.beta_date, 10) > this.state.earliestDate);\r\n            case \"beta\":\r\n                return (!version.public_date && Number.parseInt(version.beta_date, 10) > this.state.earliestDate);\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n}\r\n\r\nclass Version extends Component {\r\n    render() {\r\n        var style = \"success\";\r\n        var branchBadge = undefined;\r\n        var builtDate = undefined;\r\n\r\n        if (!this.props.version.public_date) {\r\n            style = \"danger\";\r\n            branchBadge = <Badge className=\"pull-right\">Beta</Badge>;\r\n        } else {\r\n            branchBadge = <Badge className=\"pull-right\">Public</Badge>;\r\n        }       \r\n\r\n        if (this.props.version.built_date) {\r\n            var builtEpoch = Number.parseInt(this.props.version.built_date, 10) / 1000;\r\n\r\n            if (builtEpoch > 1) {\r\n                builtDate = <span>(<Timestamp time={builtEpoch} />)</span>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Panel bsStyle={style}>\r\n                <Panel.Heading>\r\n                    <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"code-branch\" /> {this.props.version.version} {builtDate} {branchBadge}</Panel.Title>\r\n                </Panel.Heading>\r\n                <Panel.Body>\r\n                    <div>\r\n                        {this.renderItems()}\r\n                    </div>\r\n                </Panel.Body>\r\n                <Panel.Footer className=\"text-muted\">\r\n                    <DateLabel bsStyle=\"info\" icon=\"wrench\" name=\"Client Build Time\" value={this.props.version.built_date} />\r\n                    <DateLabel bsStyle=\"info\" icon=\"flask\" name=\"Client Beta Release\" value={this.props.version.beta_date} />\r\n                    <DateLabel bsStyle=\"info\" icon=\"users\" name=\"Client Public Release\" value={this.props.version.public_date} />\r\n                    <SteamLabel bsStyle=\"info\" value={this.props.version.build_id} />\r\n\r\n                    <div className=\"pull-right\">\r\n                        <DateLabel bsStyle=\"warning\" icon=\"flask\" name=\"Dedicated Server Beta Release\" value={this.props.version.server_beta_date} />\r\n                        <DateLabel bsStyle=\"warning\" icon=\"users\" name=\"Dedicated Server Public Release\" value={this.props.version.server_public_date} />\r\n                        <SteamLabel bsStyle=\"warning\" value={this.props.version.server_build_id} />\r\n                    </div>\r\n                </Panel.Footer>\r\n            </Panel>\r\n        );\r\n    }\r\n\r\n    renderItems() {\r\n        if (this.props.version.notes) {\r\n            var notes = this.props.version.notes.map((note, i) => <li key={i}>{note}</li>);\r\n            return <ul>{notes}</ul>\r\n        } else {\r\n            return (<small>No change log for this version.</small>);\r\n        }\r\n    }\r\n}\r\n\r\nclass SteamLabel extends Component {\r\n    render() {\r\n        if (!this.props.value) {\r\n            return null;\r\n        }\r\n\r\n        return (<Label bsStyle={this.props.bsStyle}><FontAwesomeIcon icon={[\"fab\", \"steam\"]} /> <abbr title=\"Steam Build ID\">{this.props.value}</abbr></Label>);        \r\n    }\r\n}\r\n\r\nclass DateLabel extends Component {\r\n    render() {\r\n        if (!this.props.value) {\r\n            return null;\r\n        }\r\n\r\n        if (this.props.value < 1) {\r\n            return (<Label bsStyle={this.props.bsStyle}><FontAwesomeIcon icon={this.props.icon} /> <abbr title={this.props.name}>Unknown</abbr></Label>);        \r\n        } else {\r\n            return (<Label bsStyle={this.props.bsStyle}><FontAwesomeIcon icon={this.props.icon} /> <abbr title={this.props.name}><Timestamp time={this.props.value / 1000} format='full' twentyFourHour /></abbr></Label>);        \r\n        }\r\n    }\r\n}\r\n\r\nexport default VersionList;\r\n","import React, { Component } from 'react';\r\nimport { Panel, Row, Col } from 'react-bootstrap';\r\n\r\nimport Timestamp from 'react-timestamp';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './News.css';\r\nlibrary.add(faFileAlt);\r\n\r\nclass News extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { news: { data: null, message: \"Please wait loading news!\" } };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var versionList = this;\r\n\r\n        axios({ url: 'https://data.stationeering.com/news/' + this.props.source + '.json', method: 'get', responseType: 'json' })\r\n            .then(function (response) {\r\n                versionList.setState({ news: { data: response.data, message: null } })\r\n            })\r\n            .catch(function (error) {\r\n                versionList.setState({ news: { message: \"Failed to load news list! \" + error } })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                {this.renderNews()}\r\n            </Row>);\r\n    }\r\n\r\n    renderNews() {\r\n        if (this.state.news.data === null) {\r\n            return (<Col md={12}>\r\n                <small>{this.state.news.message}</small>\r\n            </Col>);\r\n        } else {\r\n            return this.state.news.data.slice(0, this.props.count).map((news) => <NewsItem news={news} />);\r\n        }\r\n    }\r\n}\r\n\r\nclass NewsItem extends Component {\r\n    render() {\r\n        let image = undefined;\r\n\r\n        if (this.props.news.has_image) {\r\n            // eslint-disable-next-line \r\n            image = <img src={\"https://data.stationeering.com/news/steam/\" + this.props.news.id + \".webp\"} width=\"100%\" />;\r\n        }\r\n\r\n        return (\r\n            <Col md={4}>\r\n                <Panel>\r\n                    <Panel.Heading>\r\n                        <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"file-alt\" /> <a href={this.props.news.url}>{this.props.news.title}</a></Panel.Title>\r\n                    </Panel.Heading>\r\n                    <Panel.Body>\r\n                        {image}\r\n                        <p>\r\n                            <small><Timestamp time={this.props.news.date} /> by {this.props.news.author}</small>\r\n                        </p>\r\n                        <p>\r\n                            {this.props.news.contents.slice(0, 300)}…\r\n                        </p>\r\n                        <p>\r\n                            <small><a href={this.props.news.url}>(read more)</a></small>\r\n                        </p>\r\n                    </Panel.Body>\r\n                </Panel>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Panel, Row, Col } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faNewspaper, faHandSpock, faSitemap, faMicrochip, faCodeBranch, faGlobeAsia, faBookOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport News from './News';\r\n\r\nimport './Home.css';\r\n\r\nlibrary.add(faNewspaper, faHandSpock, faSitemap, faMicrochip, faCodeBranch, faGlobeAsia, faBookOpen );\r\n\r\nclass Home extends Component { \r\n    render() {\r\n      return (\r\n        <div>\r\n          <Row>\r\n           <Col md={12}>\r\n              <h3><FontAwesomeIcon icon=\"hand-spock\" /> Hello!</h3>\r\n              <p>\r\n                Welcome to <strong>Stationeering</strong>! This website is a continuation of \"Melair's Version History\", expanded with new features and info.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <h3><FontAwesomeIcon icon=\"sitemap\" /> What to do?</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={3}>\r\n              <Panel bsStyle=\"success\">\r\n                <Panel.Heading>\r\n                  <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"book-open\" /> <NavLink to='/guide'>Guide</NavLink></Panel.Title>\r\n                </Panel.Heading>\r\n                <Panel.Body>\r\n                  <p>\r\n                    Similar to the in game Stationpedia, but with some more information in places. \r\n                  </p>\r\n                  <p>\r\n                  <NavLink to='/guide'>Check out the guide!</NavLink>\r\n                  </p>\r\n                </Panel.Body>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Panel bsStyle=\"success\">\r\n                <Panel.Heading>\r\n                  <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"microchip\" /> <NavLink to='/tools/ic'>IC Simulator</NavLink></Panel.Title>\r\n                </Panel.Heading>\r\n                <Panel.Body>\r\n                  <p>\r\n                    Simulator for the Logic Programmable Chip now in Stationeers!\r\n                  </p>\r\n                  <p>\r\n                    <NavLink to='/tools/ic'>Try It!</NavLink>\r\n                  </p>\r\n                </Panel.Body>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Panel bsStyle=\"success\">\r\n                <Panel.Heading>\r\n                  <Panel.Title componentClass=\"h3\"><FontAwesomeIcon icon=\"code-branch\" /> <NavLink to='/versions/recent'>Version History</NavLink></Panel.Title>\r\n                </Panel.Heading>\r\n                <Panel.Body>\r\n                  <p>\r\n                    A list of the different versions Stationeers has had, what's on the beta and main branches.\r\n                  </p>\r\n                  <p>\r\n                  <NavLink to='/versions/recent'>See what's changed!</NavLink>\r\n                  </p>\r\n                </Panel.Body>\r\n              </Panel>\r\n            </Col>           \r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <h3><FontAwesomeIcon icon=\"newspaper\" /> Latest news from Steam!</h3>\r\n              <News source=\"steam\" count={3} />\r\n              <p>\r\n                <small>News is retrieved from Steam, stationeering.com is not responsible for the content.</small>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <h3><FontAwesomeIcon icon=\"newspaper\" /> Latest posts from reddit!</h3>\r\n              <News source=\"reddit\" count={3} />\r\n              <p>\r\n                <small>News is retrieved from reddit, stationeering.com is not responsible for the content.</small>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Home;","import React, { Component } from 'react';\r\nimport { NavLink, Switch, Route } from 'react-router-dom';\r\nimport { Grid, Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\r\n\r\nimport Guide from './guide/Guide';\r\nimport ICSimulator from './tools/ic/ICSimulator';\r\nimport ICPermalink from './tools/ic/ICPermalink';\r\nimport UpdateManager from './UpdateManager';\r\n\r\nimport Data from './tools/data/Data';\r\nimport Discord from './tools/discord/Discord';\r\nimport VersionList from './versions/VersionList';\r\nimport Home from './home/Home';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSteam, faTwitter, faDiscord } from '@fortawesome/free-brands-svg-icons';\r\nimport { faGlobe, faBookOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './App.css';\r\n\r\nlibrary.add(faSteam, faTwitter, faGlobe, faDiscord, faBookOpen);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar>\r\n          <Header />\r\n          <Navigation />\r\n        </Navbar>\r\n        <Main updateProxy={this.props.updateProxy} />\r\n        <footer className=\"footer\">\r\n          <small>\r\n              stationeering.com is a fan website about <a href=\"https://store.steampowered.com/app/544550/Stationeers/\">Stationeers</a> run by <a href=\"https://twitter.com/MelairCraft\">Melair</a>.\r\n              The source code and infrastructure configuration is available for this website at <a href=\"https://github.com/stationeering\">GitHub</a>.\r\n              <br />\r\n              Stationeers content and materials are trademarks and copyrights of RocketWerkz Ltd and its licensors.\r\n          </small>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar.Header>\r\n        <Navbar.Brand>\r\n          <NavLink to='/'>Stationeering</NavLink>\r\n        </Navbar.Brand>\r\n      </Navbar.Header>\r\n    );\r\n  }\r\n}\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav>\r\n          <NavItem componentClass={NavLink} eventKey={1} to=\"/guide\" href=\"/guide\">\r\n            <FontAwesomeIcon icon=\"book-open\"/> Guide\r\n          </NavItem>\r\n          <NavItem componentClass={NavLink} eventKey={1} to=\"/versions/recent\" href=\"/versions/recent\">\r\n            <FontAwesomeIcon icon=\"code-branch\"/> Change Log\r\n          </NavItem>\r\n          <NavItem componentClass={NavLink} eventKey={2} to=\"/tools/ic\" href=\"/tools/ic\">\r\n            <FontAwesomeIcon icon=\"microchip\" /> IC Simulator\r\n          </NavItem>\r\n          <NavDropdown eventKey={4} title={[<FontAwesomeIcon icon=\"wrench\" />,\" Tools\"]} id=\"basic-nav-dropdown\">\r\n            <MenuItem componentClass={NavLink} eventKey={4.2} to=\"/tools/discord\" href=\"/tools/discord\">Discord Bot</MenuItem>\r\n            <MenuItem componentClass={NavLink} eventKey={4.3} to=\"/tools/data\" href=\"/tools/data\">Data and Webhooks</MenuItem>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          <Navbar.Text>\r\n            Offical Stationeers:\r\n          </Navbar.Text>\r\n          <NavItem eventKey={4} href=\"https://store.steampowered.com/app/544550/Stationeers/\">\r\n            <FontAwesomeIcon icon={[\"fab\", \"steam\"]} />\r\n          </NavItem>\r\n          <NavItem eventKey={5} href=\"https://stationeers.com/\">\r\n            <FontAwesomeIcon icon={[\"fa\", \"globe\"]} />\r\n          </NavItem>\r\n          <NavItem eventKey={6} href=\"https://twitter.com/stationeers\">\r\n            <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\r\n          </NavItem>\r\n          <NavItem eventKey={7} href=\"https://discordapp.com/invite/CxR3mRy\">\r\n            <FontAwesomeIcon icon={[\"fab\", \"discord\"]} />\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <UpdateManager updateProxy={this.props.updateProxy} />\r\n        <Switch>\r\n          <Route path=\"/guide\" component={Guide} />\r\n          <Route path=\"/versions/:section\" component={VersionList} />\r\n          <Route path=\"/tools/ic/:permalink\" component={ICPermalink} />\r\n          <Route path=\"/tools/ic\" component={ICSimulator} />          \r\n          <Route path=\"/tools/data\" component={Data} />\r\n          <Route path=\"/tools/discord\" component={Discord} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","class UpdateProxy {\r\n    constructor() {\r\n        this._hasUpdate = false;\r\n        this._notifyFunctions = [];\r\n\r\n        this.notify = this.notify.bind(this);\r\n        this.subscribe = this.subscribe.bind(this);\r\n    }\r\n\r\n    notify() {\r\n        this._hasUpdate = true;\r\n\r\n        for (let f of this._notifyFunctions) {\r\n            f();\r\n        }\r\n    }\r\n\r\n    subscribe(f) {\r\n        this._notifyFunctions.push(f);\r\n\r\n        if (this._hasUpdate) {\r\n            f();\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateProxy;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport UpdateProxy from './UpdateProxy';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nvar updateProxy = new UpdateProxy();\r\nReactDOM.render(<BrowserRouter><App updateProxy={updateProxy} /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}